Index: src/main/java/view/AllDecksViewGraphic.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.stage.Stage;\r\nimport model.Deck;\r\nimport model.User;\r\n\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class AllDecksViewGraphic extends Application implements Initializable {\r\n    private static Stage stage;\r\n    private static AllDecksViewGraphic instance = null;\r\n    private static User user;\r\n    @FXML\r\n    public TextField deckName;\r\n    @FXML\r\n    private VBox vBox;\r\n    @FXML\r\n    private ScrollPane scrollPane;\r\n    private static ArrayList<AnchorPane> decks = new ArrayList<>();\r\n    private static final ToggleGroup toggleGroup = new ToggleGroup();\r\n\r\n    public static AllDecksViewGraphic getInstance() {\r\n        if (instance == null) instance = new AllDecksViewGraphic();\r\n        return instance;\r\n    }\r\n\r\n    public void setCurrentUser(User user) {\r\n        AllDecksViewGraphic.user = user;\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        AllDecksViewGraphic.stage = stage;\r\n        URL url = getClass().getResource(\"/AllDecksMenu.fxml\");\r\n        AnchorPane root = FXMLLoader.load(url);\r\n        Scene scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        ArrayList<Deck> userAllDecks = (ArrayList<Deck>) user.getAllDecks();\r\n        for (Deck deck : userAllDecks) {\r\n            addDeck(deck);\r\n            if (user.getActiveDeck() != null && deck.getDeckName().equals(user.getActiveDeck().getDeckName()))\r\n                setActiveDeckInitialize(deck);\r\n        }\r\n    }\r\n\r\n    private void addDeck(Deck deck) {\r\n        AnchorPane anchorPane1 = new AnchorPane();\r\n        RadioButton radioButton = new RadioButton(deck.getDeckName());\r\n        radioButton.setLayoutX(8);\r\n        radioButton.setTextFill(Color.WHITE);\r\n        radioButton.setOnAction(this::setActiveDeck);\r\n        radioButton.setToggleGroup(toggleGroup);\r\n        radioButton.setMaxWidth(180);\r\n        anchorPane1.getChildren().add(radioButton);\r\n        Label label = new Label();\r\n        if (deck.isValid())\r\n            label.setText(\" : Valid\");\r\n        else\r\n            label.setText(\" : Invalid\");\r\n        label.setLayoutX(184);\r\n        label.setTextFill(Color.WHITE);\r\n        anchorPane1.getChildren().add(label);\r\n        Button editButton = new Button(\"Edit Deck\");\r\n        editButton.setLayoutX(240);\r\n        editButton.setOnAction(this::editDeck);\r\n        anchorPane1.getChildren().add(editButton);\r\n        Button deleteButton = new Button(\"Delete Deck\");\r\n        deleteButton.setCancelButton(true);\r\n        deleteButton.setLayoutX(310);\r\n        deleteButton.setOnAction(this::deleteDeck);\r\n        deleteButton.setStyle(\"-fx-background-color: #ffb3b3;\");\r\n        anchorPane1.getChildren().add(deleteButton);\r\n        vBox.setSpacing(10);\r\n        decks.add(anchorPane1);\r\n        vBox.getChildren().add(anchorPane1);\r\n        scrollPane.setMaxHeight(400);\r\n        vBox.setPrefHeight(36 * decks.size());\r\n        scrollPane.setPrefHeight(36 * decks.size());\r\n    }\r\n\r\n\r\n    public void goBack() throws Exception {\r\n        MainViewGraphic.getInstance().setCurrentUser(user);\r\n        MainViewGraphic.getInstance().start(stage);\r\n    }\r\n\r\n    public void editDeck(ActionEvent actionEvent) {\r\n        for (AnchorPane anchorPane : decks) {\r\n            Button button = (Button) anchorPane.getChildren().get(2);\r\n            if (button.equals(actionEvent.getSource())) {\r\n                RadioButton radioButton = (RadioButton) anchorPane.getChildren().get(0);\r\n                Deck deck = user.getDeckByName(radioButton.getText());\r\n                //TODO call edit menu of kiana\r\n            }\r\n        }\r\n    }\r\n\r\n    public void deleteDeck(ActionEvent actionEvent) {\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION, \"Are you sure you want to permanently delete this deck?\");\r\n        alert.setTitle(\"Error\");\r\n        alert.setHeaderText(\"\");\r\n        alert.showAndWait();\r\n        if (alert.getResult().equals(ButtonType.CANCEL))\r\n            return;\r\n        for (int i = 0; i < decks.size(); i++) {\r\n            AnchorPane anchorPane = decks.get(i);\r\n            Button button = (Button) anchorPane.getChildren().get(3);\r\n            if (button.equals(actionEvent.getSource())) {\r\n                RadioButton radioButton = (RadioButton) anchorPane.getChildren().get(0);\r\n                user.deleteDeck(radioButton.getText());\r\n                decks.remove(anchorPane);\r\n                for (int j = 0; j < vBox.getChildren().size(); j++) {\r\n                    AnchorPane anchorPane1 = (AnchorPane) vBox.getChildren().get(j);\r\n                    if (((RadioButton) anchorPane1.getChildren().get(0)).getText().equals(((RadioButton) anchorPane.getChildren().get(0)).getText())) {\r\n                        vBox.getChildren().remove(j);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void setActiveDeck(ActionEvent actionEvent) {\r\n        for (AnchorPane anchorPane : decks) {\r\n            RadioButton radioButton = (RadioButton) anchorPane.getChildren().get(0);\r\n            if (radioButton.equals(actionEvent.getSource())) {\r\n                Deck deck = user.getDeckByName(radioButton.getText());\r\n                user.setActiveDeck(deck);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void setActiveDeckInitialize(Deck deck) {\r\n        for (AnchorPane anchorPane : decks) {\r\n            RadioButton radioButton = (RadioButton) anchorPane.getChildren().get(0);\r\n            if (radioButton.getText().equals(deck.getDeckName())) {\r\n                toggleGroup.selectToggle(radioButton);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void createNewDeck() {\r\n        if (user.getDeckByName(deckName.getText()) != null)\r\n            printError(\"deck with name \" + deckName.getText() + \" already exists\");\r\n        else {\r\n            Deck deck = new Deck(deckName.getText());\r\n            user.addDeck(deck);\r\n            addDeck(deck);\r\n        }\r\n    }\r\n\r\n    public void printError(String text) {\r\n        Alert alert = new Alert(Alert.AlertType.ERROR, text);\r\n        alert.setTitle(\"Error\");\r\n        alert.setHeaderText(\"\");\r\n        alert.showAndWait();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/view/AllDecksViewGraphic.java	(revision be307abe8e476dc0cfa5be86bdea2c34a97d81e3)
+++ src/main/java/view/AllDecksViewGraphic.java	(date 1625407297699)
@@ -42,6 +42,7 @@
 
     @Override
     public void start(Stage stage) throws Exception {
+        System.out.println(user.getActiveDeck());
         AllDecksViewGraphic.stage = stage;
         URL url = getClass().getResource("/AllDecksMenu.fxml");
         AnchorPane root = FXMLLoader.load(url);
Index: .idea/shelf/Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM__Default_Changelist_.xml	(revision be307abe8e476dc0cfa5be86bdea2c34a97d81e3)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM__Default_Changelist_.xml	(revision be307abe8e476dc0cfa5be86bdea2c34a97d81e3)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM_[Default_Changelist]" date="1624740543545" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 6/27/2021 1:18 AM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM_[Default_Changelist]/shelved.patch	(revision be307abe8e476dc0cfa5be86bdea2c34a97d81e3)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM_[Default_Changelist]/shelved.patch	(revision be307abe8e476dc0cfa5be86bdea2c34a97d81e3)
@@ -1,499 +0,0 @@
-Index: src/main/java/test.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>//package controller;\r\n\r\nimport controller.DeckController;\r\nimport controller.exeption.*;\r\nimport model.*;\r\n\r\nimport controller.*;\r\nimport view.*;\r\nimport org.junit.jupiter.api.Assertions;\r\nimport org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.DisplayName;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.junit.jupiter.api.function.Executable;\r\nimport view.DeckView;\r\nimport view.LogInView;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.InputStream;\r\nimport java.io.PrintStream;\r\nimport java.util.Objects;\r\n\r\n\r\npublic class test {\r\n\r\n    static User player;\r\n    static User rival;\r\n\r\n    @BeforeAll\r\n    static void toBeDoneBefore() throws Exception {\r\n        player = new User(\"kiana_msz\", \"kiana\", \"12345\");\r\n        Deck deck = new Deck(\"deck of kiana\");\r\n        Deck deck1 = new Deck(\"deck of hamraz\");\r\n        player.addDeck(deck);\r\n        player.setActiveDeck(deck);\r\n        rival = new User(\"hamriouz\", \"hamraz\", \"12345\");\r\n        rival.addDeck(deck1);\r\n        rival.setActiveDeck(deck1);\r\n        for (int i = 0; i < 3; i++) {\r\n            rival.addCardToUsersAllCards(MonsterCard.YOMI_SHIP);\r\n            DeckController.getInstance(rival).addCardToDeck(MonsterCard.YOMI_SHIP.getNamePascalCase(), \"deck of hamraz\", false, false);\r\n        }\r\n        for (int i = 0; i < 3; i++) {\r\n            rival.addCardToUsersAllCards(MonsterCard.DARK_BLADE);\r\n            DeckController.getInstance(rival).addCardToDeck(MonsterCard.DARK_BLADE.getNamePascalCase(), \"deck of hamraz\", false, false);\r\n        }\r\n        for (int i = 0; i < 3; i++) {\r\n            rival.addCardToUsersAllCards(MonsterCard.DARK_MAGICIAN);\r\n            DeckController.getInstance(rival).addCardToDeck(MonsterCard.DARK_MAGICIAN.getNamePascalCase(), \"deck of hamraz\", false, false);\r\n        }\r\n        rival.addCardToUsersAllCards(MonsterCard.ALEXANDRITE_DRAGON);\r\n        DeckController.getInstance(rival).addCardToDeck(MonsterCard.ALEXANDRITE_DRAGON.getNamePascalCase(), \"deck of hamraz\", false, false);\r\n        deck = new Deck(\"second deck\");\r\n        player.addDeck(deck);\r\n        deck = new Deck(\"third deck\");\r\n        player.addDeck(deck);\r\n        {\r\n            DeckController.getInstance(player).createDeck(\"deck to check full main\");\r\n            player.setActiveDeck(player.getDeckByName(\"deck to check full main\"));\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(MonsterCard.SUIJIN);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(MonsterCard.FIREYAROU);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(MonsterCard.ALEXANDRITE_DRAGON);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(MonsterCard.BABY_DRAGON);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(MonsterCard.BATTLE_OX);\r\n            }\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.ALEXANDRITE_DRAGON.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(\"Suijin\", player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(\"Fireyarou\", player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.BATTLE_OX.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.BABY_DRAGON.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(MonsterCard.HANIWA);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(MonsterCard.CURTAIN_OF_DARK_ONES);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(MonsterCard.GATE_GUARDIAN);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(MonsterCard.HERO_OF_THE_EAST);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(MonsterCard.SCANNER);\r\n            }\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.HANIWA.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.CURTAIN_OF_DARK_ONES.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.GATE_GUARDIAN.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.HERO_OF_THE_EAST.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.SCANNER.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(SpellCard.ADVANCED_RITUAL_ART);\r\n            }\r\n\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(SpellCard.ADVANCED_RITUAL_ART.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(SpellCard.BLACK_PENDANT);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(SpellCard.BLACK_PENDANT.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(SpellCard.CHANGE_OF_HEART);\r\n            }\r\n            DeckController.getInstance(player).addCardToDeck(SpellCard.CHANGE_OF_HEART.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(SpellCard.CLOSED_FOREST);\r\n            }\r\n\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(SpellCard.CLOSED_FOREST.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(SpellCard.FOREST);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(SpellCard.FOREST.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(SpellCard.DARK_HOLE);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(SpellCard.DARK_HOLE.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(SpellCard.HARPIES_FEATHER_DUST);\r\n            }\r\n\r\n            DeckController.getInstance(player).addCardToDeck(SpellCard.HARPIES_FEATHER_DUST.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(SpellCard.MONSTER_REBORN);\r\n            }\r\n\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(SpellCard.MONSTER_REBORN.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(SpellCard.RAIGEKI);\r\n            }\r\n\r\n\r\n            DeckController.getInstance(player).addCardToDeck(SpellCard.RAIGEKI.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(SpellCard.MAGNUM_SHIELD);\r\n            }\r\n\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(SpellCard.MAGNUM_SHIELD.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(TrapCard.CALL_OF_THE_HAUNTED);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 3; i++) {\r\n                DeckController.getInstance(player).addCardToDeck(TrapCard.CALL_OF_THE_HAUNTED.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n\r\n\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(TrapCard.TRAP_HOLE);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(TrapCard.MAGIC_CYLINDER);\r\n            }\r\n            for (int i = 0; i < 4; i++) {\r\n                player.addCardToUsersAllCards(TrapCard.MAGIC_JAMMER);\r\n            }\r\n\r\n\r\n        }\r\n        player.setActiveDeck(player.getDeckByName(\"deck of kiana\"));\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"testForMinFinder\")\r\n    public void testForMinFinder() {\r\n        DuelController duelController = new DuelController(player,rival,1);\r\n        Assertions.assertEquals(4,duelController.minFinder(5,4));\r\n        Assertions.assertEquals(0,duelController.minFinder(0,5));\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"unselect card check\")\r\n    public void unselectCardCheck() {\r\n        SelectedCard selectedCard = new SelectedCard(MonsterCard.BITRON,BoardZone.MONSTERZONE,3,player);\r\n        Cardable beforeChanging = selectedCard.getCard();\r\n        Assertions.assertEquals(MonsterCard.BITRON,beforeChanging);\r\n        selectedCard.setCard(MonsterCard.AXE_RAIDER);\r\n        Cardable afterChanging = selectedCard.getCard();\r\n        Assertions.assertEquals(MonsterCard.AXE_RAIDER,afterChanging);\r\n        BoardZone beforeChangingBoardZone = selectedCard.getBoardZone();\r\n        Assertions.assertEquals(BoardZone.MONSTERZONE,beforeChangingBoardZone);\r\n        selectedCard.setBoardZone(BoardZone.FIELDZONE);\r\n        Assertions.assertEquals(BoardZone.FIELDZONE,selectedCard.getBoardZone());\r\n        Integer number = selectedCard.getNumber();\r\n        Assertions.assertEquals(3,selectedCard.getNumber());\r\n        selectedCard.setNumber(4);\r\n        Assertions.assertEquals(4,selectedCard.getNumber());\r\n        User ownerBeforeChanging = selectedCard.getOwner();\r\n        Assertions.assertEquals(player,ownerBeforeChanging);\r\n        selectedCard.setOwner(rival);\r\n        Assertions.assertEquals(rival,selectedCard.getOwner());\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"get player and rival test\")\r\n    public void getPlayerAndRivalTest() {\r\n        DuelController duelController = new DuelController(player, rival, 1);\r\n        User expectedRival = duelController.getRival();\r\n        User expectedPlayer = duelController.getPlayer();\r\n        Assertions.assertEquals(expectedPlayer, player);\r\n        Assertions.assertEquals(expectedRival, rival);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"set player and rival test\")\r\n    public void setPlayerAndRivalTest() {\r\n        DuelController duelController = new DuelController(player, rival, 1);\r\n        User naghi = new User(\"naghi\", \"naghi\", \"naghi\");\r\n        User taghi = new User(\"taghi\", \"taghi\", \"taghi\");\r\n        duelController.setPlayer(naghi);\r\n        duelController.setRival(taghi);\r\n        User expectedRival = duelController.getRival();\r\n        User expectedPlayer = duelController.getPlayer();\r\n        SelectedCard selectedCard = duelController.getSelectedCard();\r\n        Assertions.assertEquals(expectedPlayer, naghi);\r\n        Assertions.assertEquals(expectedRival, taghi);\r\n        duelController.setPlayer(player);\r\n        duelController.setRival(rival);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"go to menu test\")\r\n    public void goToMenuTestDeck() {\r\n        ByteArrayInputStream in = new ByteArrayInputStream(\"menu show-current\\nmenu exit\\nuser logout\\n\".getBytes());\r\n        System.setIn(in);\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        MainController.getInstance(player).goToMenu(\"Deck\");\r\n        //Assertions.assertEquals(\"Deck Menu\\r\\n\",outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"go to menu test\")\r\n    public void goToMenuTestScoreBoard() {\r\n        ByteArrayInputStream in = new ByteArrayInputStream(\"menu show-current\\nmenu exit\\nuser logout\\n\".getBytes());\r\n        System.setIn(in);\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        MainController.getInstance(player).goToMenu(\"ScoreBoard\");\r\n        //Assertions.assertEquals(\"Scoreboard Menu\\r\\n\",outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"go to menu test\")\r\n    public void goToMenuTestProfile() {\r\n        ByteArrayInputStream in = new ByteArrayInputStream(\"menu show-current\\nmenu exit\\nuser logout\\n\".getBytes());\r\n        System.setIn(in);\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        MainController.getInstance(player).goToMenu(\"Profile\");\r\n        //Assertions.assertEquals(\"Profile Menu\\r\\n\",outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"go to menu test\")\r\n    public void goToMenuTestShop() {\r\n        ByteArrayInputStream in = new ByteArrayInputStream(\"menu show-current\\nmenu exit\\nuser logout\\n\".getBytes());\r\n        System.setIn(in);\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        MainController.getInstance(player).goToMenu(\"Shop\");\r\n        //Assertions.assertEquals(\"Shop Menu\\r\\n\",outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"go to menu test\")\r\n    public void goToMenuTestImportExport() {\r\n        ByteArrayInputStream in = new ByteArrayInputStream(\"menu show-current\\nmenu exit\\nuser logout\\n\".getBytes());\r\n        System.setIn(in);\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        MainController.getInstance(player).goToMenu(\"ImportExport\");\r\n        //Assertions.assertEquals(\"Import-Export Menu\\r\\n\",outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"test for scoreboard\")\r\n    public void testForScoreBoard() throws Exception {\r\n        LogInController.getInstance().createUser(\"ali\", \"ali\", \"ali\");\r\n        LogInController.getInstance().createUser(\"gholi\", \"gholi\", \"gholi\");\r\n        LogInController.getInstance().createUser(\"soli\", \"soli\", \"soli\");\r\n        LogInController.getInstance().createUser(\"kholi\", \"kholi\", \"kholi\");\r\n        LogInController.getInstance().createUser(\"goli\", \"goli\", \"goli\");\r\n        Objects.requireNonNull(User.getUserByUsername(\"ali\")).setScore(1000);\r\n        Objects.requireNonNull(User.getUserByUsername(\"goli\")).setScore(1000);\r\n        Objects.requireNonNull(User.getUserByUsername(\"soli\")).setScore(2000);\r\n        Objects.requireNonNull(User.getUserByUsername(\"kholi\")).setScore(3000);\r\n        Objects.requireNonNull(User.getUserByUsername(\"gholi\")).setScore(3000);\r\n        ByteArrayInputStream in = new ByteArrayInputStream(\"menu show-current\\nmenu exit\\nuser logout\\n\".getBytes());\r\n        System.setIn(in);\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        ScoreBoardController.getInstance(player).showScoreboard();\r\n        Assertions.assertEquals(\"1- gholi: 3000\\n\" +\r\n                \"1- hamraz: 3000\\n\" +\r\n                \"1- kholi: 3000\\n\" +\r\n                \"4- soli: 2000\\n\" +\r\n                \"5- ali: 1000\\n\" +\r\n                \"5- goli: 1000\\n\" +\r\n                \"7- kiana: 0\\n\".replaceAll(\"\\n\",\"\\r\\n\"),outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"test for show all in shopController\")\r\n    public void shopControllerShowAllTest() {\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        ShopController.getInstance(player).showAll();\r\n        Assertions.assertEquals(\"Advanced Ritual Art:3000\\n\" +\r\n                \"Alexandrite Dragon:2600\\n\" +\r\n                \"Axe Raider:3100\\n\" +\r\n                \"Baby Dragon:1600\\n\" +\r\n                \"Battle Ox:2900\\n\" +\r\n                \"Battle Warrior:1300\\n\" +\r\n                \"Beast King Barbaros:9200\\n\" +\r\n                \"Bitron:1000\\n\" +\r\n                \"Black Pendant:4300\\n\" +\r\n                \"Blue Eyes White Dragon:11300\\n\" +\r\n                \"Call Of The Haunted:3500\\n\" +\r\n                \"Change Of Heart:2500\\n\" +\r\n                \"Closed Forest:4300\\n\" +\r\n                \"Command Knight:2100\\n\" +\r\n                \"Crab Turtle:10200\\n\" +\r\n                \"Crawling Dragon:3900\\n\" +\r\n                \"Curtain Of Dark Ones:700\\n\" +\r\n                \"Dark Blade:3500\\n\" +\r\n                \"Dark Hole:2500\\n\" +\r\n                \"Dark Magician:8300\\n\" +\r\n                \"Exploder Dragon:1000\\n\" +\r\n                \"Feral Imp:2800\\n\" +\r\n                \"Fireyarou:2500\\n\" +\r\n                \"Flame Manipulator:1500\\n\" +\r\n                \"Forest:4300\\n\" +\r\n                \"Gate Guardian:20000\\n\" +\r\n                \"Haniwa:600\\n\" +\r\n                \"Harpies Feather Dust:2500\\n\" +\r\n                \"Herald Of Creation:2700\\n\" +\r\n                \"Hero Of The East:1700\\n\" +\r\n                \"Horn Imp:2500\\n\" +\r\n                \"Leotron:2500\\n\" +\r\n                \"Magic Cylinder:2000\\n\" +\r\n                \"Magic Jammer:3000\\n\" +\r\n                \"Magnum Shield:4300\\n\" +\r\n                \"Man Eater Bug:600\\n\" +\r\n                \"Marshmallon:700\\n\" +\r\n                \"Messenger Of Peace:4000\\n\" +\r\n                \"Mind Crush:2000\\n\" +\r\n                \"Mirage Dragon:2500\\n\" +\r\n                \"Mirror Force:2000\\n\" +\r\n                \"Monster Reborn:2000\\n\" +\r\n                \"Mystical Space Typhoon:3500\\n\" +\r\n                \"Negate Attack:3000\\n\" +\r\n                \"Pot Of Greed:2500\\n\" +\r\n                \"Raigeki:2500\\n\" +\r\n                \"Ring Of Defense:3500\\n\" +\r\n                \"Scanner:8000\\n\" +\r\n                \"Silver Fang:1700\\n\" +\r\n                \"Skull Guardian:7900\\n\" +\r\n                \"Slot Machine:7500\\n\" +\r\n                \"Solemn Warning:3000\\n\" +\r\n                \"Spell Absorption:4000\\n\" +\r\n                \"Spiral Serpent:11700\\n\" +\r\n                \"Suijin:8700\\n\" +\r\n                \"Supply Squad:4000\\n\" +\r\n                \"Sword Of Dark Destruction:4300\\n\" +\r\n                \"Sword Of Revealing Light:2500\\n\" +\r\n                \"Terraforming:2500\\n\" +\r\n                \"Terratiger The Empowered Warrior:3200\\n\" +\r\n                \"Texchanger:200\\n\" +\r\n                \"The Calculator:8000\\n\" +\r\n                \"The Tricky:4300\\n\" +\r\n                \"Time Seal:2000\\n\" +\r\n                \"Torrential Tribute:2000\\n\" +\r\n                \"Trap Hole:2000\\n\" +\r\n                \"Twin Twisters:3500\\n\" +\r\n                \"Umiiruka:4300\\n\" +\r\n                \"United We Stand:4300\\n\" +\r\n                \"Vanitys Emptiness:3500\\n\" +\r\n                \"Wall Of Revealing Light:3500\\n\" +\r\n                \"Warrior Dai Grepher:3400\\n\" +\r\n                \"Wattaildragon:5800\\n\" +\r\n                \"Wattkid:1300\\n\" +\r\n                \"Yami:4300\\n\" +\r\n                \"Yomi Ship:1700\\n\".replaceAll(\"\\n\", \"\\r\\n\"), outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"buy card test\")\r\n    public void buyCardTest() throws Exception {\r\n        Assertions.assertThrows(CardNotFoundForController.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                ShopController.getInstance(player).buyCard(\"card molayi\");\r\n            }\r\n        });\r\n        int firstSize = player.getAllCards().size();\r\n        int firstMoney = player.getMoney();\r\n        ShopController.getInstance(player).buyCard(MonsterCard.SILVER_FANG.getNamePascalCase());\r\n        int secondSize = player.getAllCards().size();\r\n        int secondMoney = player.getMoney();\r\n        Assertions.assertEquals(1, secondSize - firstSize);\r\n        Assertions.assertEquals(1700, firstMoney - secondMoney);\r\n        Assertions.assertThrows(NotEnoughMoney.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                for (int i = 0; i < 100; i++) {\r\n                    ShopController.getInstance(player).buyCard(MonsterCard.SILVER_FANG.getNamePascalCase());\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"change password test\")\r\n    public void changePasswordTest() throws Exception {\r\n        Assertions.assertThrows(WrongPassword.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                ProfileController.getInstance(player).changePassword(\"123\", \"1234\");\r\n            }\r\n        });\r\n        Assertions.assertThrows(SamePassword.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                ProfileController.getInstance(player).changePassword(\"12345\", \"12345\");\r\n            }\r\n        });\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        ProfileController.getInstance(player).changePassword(\"12345\", \"1234\");\r\n        Assertions.assertEquals(\"password changed successfully!\\r\\n\", outContent.toString());\r\n        Assertions.assertEquals(\"1234\",player.getPassword());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"change nickname test\")\r\n    public void changeNickNameTest() throws Exception {\r\n        Assertions.assertThrows(RepetitiveNickname.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                ProfileController.getInstance(player).changeNickname(\"hamraz\");\r\n            }\r\n        });\r\n        Assertions.assertThrows(SameNewNickname.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                ProfileController.getInstance(player).changeNickname(\"kiana\");\r\n            }\r\n        });\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        ProfileController.getInstance(player).changeNickname(\"kiaanaa\");\r\n        Assertions.assertEquals(\"nickname changed successfully!\\r\\n\", outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"change username test\")\r\n    public void changeUsernameTest() throws Exception {\r\n        Assertions.assertThrows(RepetitiveUsername.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                ProfileController.getInstance(player).changeUsername(\"hamriouz\");\r\n            }\r\n        });\r\n        Assertions.assertThrows(SameNewUsername.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                ProfileController.getInstance(player).changeUsername(\"kiana_msz\");\r\n            }\r\n        });\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        ProfileController.getInstance(player).changeUsername(\"kiaanaa\");\r\n        Assertions.assertEquals(\"username changed successfully!\\r\\n\", outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Remove card from deck test\")\r\n    public void removeCardFromDeck() throws Exception {\r\n        Assertions.assertThrows(DeckNotFound.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).removeCardFromDeck(MonsterCard.AXE_RAIDER.getNamePascalCase(), \"deck deck\", false);\r\n            }\r\n        });\r\n        Assertions.assertThrows(CardNotFoundForController.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).removeCardFromDeck(\"molayi tarin card\", \"deck of kiana\", false);\r\n            }\r\n        });\r\n        player.addCardToUsersAllCards(MonsterCard.AXE_RAIDER);\r\n        Assertions.assertThrows(CardNotFoundInDeck.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).removeCardFromDeck(MonsterCard.AXE_RAIDER.getNamePascalCase(), \"deck of kiana\", false);\r\n            }\r\n        });\r\n        Assertions.assertThrows(CardNotFoundInDeck.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).removeCardFromDeck(MonsterCard.AXE_RAIDER.getNamePascalCase(), \"deck of kiana\", true);\r\n            }\r\n        });\r\n        DeckController.getInstance(player).addCardToDeck(MonsterCard.AXE_RAIDER.getNamePascalCase(), \"deck of kiana\", false, false);\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        DeckController.getInstance(player).removeCardFromDeck(MonsterCard.AXE_RAIDER.getNamePascalCase(), \"deck of kiana\", false);\r\n        Assertions.assertEquals(\"card removed form deck successfully\\r\\n\", outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"showAllCardCheck\")\r\n    public void showAllCardsCheck() {\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        DeckController.getInstance(player).showAllCards();\r\n        Assertions.assertEquals(\"Advanced Ritual Art:This card can be used to Ritual Summon any 1 Ritual Monster. You must also send Normal Monsters from your Deck to the Graveyard whose total Levels equal the Level of that Ritual Monster.\\n\" +\r\n                \"Alexandrite Dragon:Many of the czars' lost jewels can be found in the scales of this priceless dragon. Its creator remains a mystery, along with how they acquired the imperial treasures. But whosoever finds this dragon has hit the jackpot... whether they know it or not.\\n\" +\r\n                \"Alexandrite Dragon:Many of the czars' lost jewels can be found in the scales of this priceless dragon. Its creator remains a mystery, along with how they acquired the imperial treasures. But whosoever finds this dragon has hit the jackpot... whether they know it or not.\\n\" +\r\n                \"Baby Dragon:Much more than just a child, this dragon is gifted with untapped power.\\n\" +\r\n                \"Baby Dragon:Much more than just a child, this dragon is gifted with untapped power.\\n\" +\r\n                \"Battle Ox:A monster with tremendous power, it destroys enemies with a swing of its axe.\\n\" +\r\n                \"Battle Ox:A monster with tremendous power, it destroys enemies with a swing of its axe.\\n\" +\r\n                \"Battle Warrior:A warrior that fights with his bare hands!!!\\n\" +\r\n                \"Black Pendant:The equipped monster gains 500 ATK. When this card is sent from the field to the Graveyard: Inflict 500 damage to your opponent.\\n\" +\r\n                \"Call Of The Haunted:Activate this card by targeting 1 monster in your GY; Special Summon that target in Attack Position. When this card leaves the field, destroy that monster. When that monster is destroyed, destroy this card.\\n\" +\r\n                \"Change Of Heart:Target 1 monster your opponent controls; take control of it until the End Phase.\\n\" +\r\n                \"Change Of Heart:Target 1 monster your opponent controls; take control of it until the End Phase.\\n\" +\r\n                \"Change Of Heart:Target 1 monster your opponent controls; take control of it until the End Phase.\\n\" +\r\n                \"Closed Forest:All Beast-Type monsters you control gain 100 ATK for each monster in your Graveyard. Field Spell Cards cannot be activated. Field Spell Cards cannot be activated during the turn this card is destroyed.\\n\" +\r\n                \"Curtain Of Dark Ones:A curtain that a spellcaster made, it is said to raise a dark power.\\n\" +\r\n                \"Dark Hole:Destroy all monsters on the field.\\n\" +\r\n                \"Fireyarou:A malevolent creature wrapped in flames that attacks enemies with intense fire.\\n\" +\r\n                \"Fireyarou:A malevolent creature wrapped in flames that attacks enemies with intense fire.\\n\" +\r\n                \"Fireyarou:A malevolent creature wrapped in flames that attacks enemies with intense fire.\\n\" +\r\n                \"Forest:All Insect, Beast, Plant, and Beast-Warrior monsters on the field gain 200 ATK/DEF.\\n\" +\r\n                \"Gate Guardian:Cannot be Normal Summoned/Set. Must first be Special Summoned (from your hand) by Tributing 1 \\\"Sanga of the Thunder\\\", \\\"Kazejin\\\", and \\\"Suijin\\\".\\n\" +\r\n                \"Haniwa:An earthen figure that protects the tomb of an ancient ruler.\\n\" +\r\n                \"Harpies Feather Dust:Destroy all Spells and Traps your opponent controls.\\n\" +\r\n                \"Harpies Feather Dust:Destroy all Spells and Traps your opponent controls.\\n\" +\r\n                \"Harpies Feather Dust:Destroy all Spells and Traps your opponent controls.\\n\" +\r\n                \"Hero Of The East:Feel da strength ah dis sword-swinging samurai from da Far East.\\n\" +\r\n                \"Magic Cylinder:When an opponent's monster declares an attack: Target the attacking monster; negate the attack, and if you do, inflict damage to your opponent equal to its ATK.\\n\" +\r\n                \"Magic Cylinder:When an opponent's monster declares an attack: Target the attacking monster; negate the attack, and if you do, inflict damage to your opponent equal to its ATK.\\n\" +\r\n                \"Magic Cylinder:When an opponent's monster declares an attack: Target the attacking monster; negate the attack, and if you do, inflict damage to your opponent equal to its ATK.\\n\" +\r\n                \"Magic Cylinder:When an opponent's monster declares an attack: Target the attacking monster; negate the attack, and if you do, inflict damage to your opponent equal to its ATK.\\n\" +\r\n                \"Magic Jammer:When a Spell Card is activated: Discard 1 card; negate the activation, and if you do, destroy it.\\n\" +\r\n                \"Magic Jammer:When a Spell Card is activated: Discard 1 card; negate the activation, and if you do, destroy it.\\n\" +\r\n                \"Magic Jammer:When a Spell Card is activated: Discard 1 card; negate the activation, and if you do, destroy it.\\n\" +\r\n                \"Magic Jammer:When a Spell Card is activated: Discard 1 card; negate the activation, and if you do, destroy it.\\n\" +\r\n                \"Magnum Shield:Equip only to a Warrior-Type monster. Apply this effect, depending on its battle position.\\n\" +\r\n                \"Attack Position: It gains ATK equal to its original DEF.\\n\" +\r\n                \"Defense Position: It gains DEF equal to its original ATK.\\n\" +\r\n                \"Mind Crush:Declare 1 card name; if that card is in your opponent's hand, they must discard all copies of it, otherwise you discard 1 random card.\\n\" +\r\n                \"Monster Reborn:Target 1 monster in either GY; Special Summon it.\\n\" +\r\n                \"Raigeki:Destroy all monsters your opponent controls.\\n\" +\r\n                \"Raigeki:Destroy all monsters your opponent controls.\\n\" +\r\n                \"Raigeki:Destroy all monsters your opponent controls.\\n\" +\r\n                \"Scanner:Once per turn, you can select 1 of your opponent's monsters that is removed from play. Until the End Phase, this card's name is treated as the selected monster's name, and this card has the same Attribute, Level, ATK, and DEF as the selected monster. If this card is removed from the field while this effect is applied, remove it from play.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\\n\" +\r\n                \"Suijin:During damage calculation in your opponent's turn, if this card is being attacked: You can target the attacking monster; make that target's ATK 0 during damage calculation only (this is a Quick Effect). This effect can only be used once while this card is face-up on the field.\\n\" +\r\n                \"Suijin:During damage calculation in your opponent's turn, if this card is being attacked: You can target the attacking monster; make that target's ATK 0 during damage calculation only (this is a Quick Effect). This effect can only be used once while this card is face-up on the field.\\n\" +\r\n                \"Trap Hole:When your opponent Normal or Flip Summons 1 monster with 1000 or more ATK: Target that monster; destroy that target.\\n\" +\r\n                \"Trap Hole:When your opponent Normal or Flip Summons 1 monster with 1000 or more ATK: Target that monster; destroy that target.\\n\" +\r\n                \"Trap Hole:When your opponent Normal or Flip Summons 1 monster with 1000 or more ATK: Target that monster; destroy that target.\\n\" +\r\n                \"Trap Hole:When your opponent Normal or Flip Summons 1 monster with 1000 or more ATK: Target that monster; destroy that target.\\n\" +\r\n                \"\\n\".replaceAll(\"\\n\",\"\\r\\n\"),outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"showAllDecksTest\")\r\n    public void showAllDecksTest() {\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        DeckController.getInstance(player).showAllDecks();\r\n        Assertions.assertEquals(\"Decks:\\n\" +\r\n                \"Active deck:\\n\" +\r\n                \"deck to check full side: main deck 0, side deck 15, invalid\\n\" +\r\n                \"Other decks:\\n\" +\r\n                \"@deck of kiana: main deck 0, side deck 0, invalid\\n\" +\r\n                \"@deck to check full main: main deck 52, side deck 0, valid\\n\" +\r\n                \"deck of kiana: main deck 0, side deck 0, invalid\\n\" +\r\n                \"deck to check add card: main deck 2, side deck 2, invalid\\n\" +\r\n                \"deck to check full main: main deck 60, side deck 0, valid\\n\" +\r\n                \"second deck: main deck 0, side deck 0, invalid\\n\" +\r\n                \"third deck: main deck 0, side deck 0, invalid\\n\".replaceAll(\"\\n\",\"\\r\\n\"),outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"showMainDeckTest\")\r\n    public void showMainDeckTest() throws Exception {\r\n        Assertions.assertThrows(DeckNotFound.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).showDeck(\"deck of kasra\", false);\r\n            }\r\n        });\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        DeckController.getInstance(player).showDeck(\"deck to check full main\", false);\r\n        Assertions.assertEquals(\"Deck: deck to check full main\\n\" +\r\n                \"Main deck:\\n\" +\r\n                \"Monsters:\\n\" +\r\n                \"Alexandrite Dragon:Many of the czars' lost jewels can be found in the scales of this priceless dragon. Its creator remains a mystery, along with how they acquired the imperial treasures. But whosoever finds this dragon has hit the jackpot... whether they know it or not.\\n\" +\r\n                \"Alexandrite Dragon:Many of the czars' lost jewels can be found in the scales of this priceless dragon. Its creator remains a mystery, along with how they acquired the imperial treasures. But whosoever finds this dragon has hit the jackpot... whether they know it or not.\\n\" +\r\n                \"Alexandrite Dragon:Many of the czars' lost jewels can be found in the scales of this priceless dragon. Its creator remains a mystery, along with how they acquired the imperial treasures. But whosoever finds this dragon has hit the jackpot... whether they know it or not.\\n\" +\r\n                \"Baby Dragon:Much more than just a child, this dragon is gifted with untapped power.\\n\" +\r\n                \"Baby Dragon:Much more than just a child, this dragon is gifted with untapped power.\\n\" +\r\n                \"Baby Dragon:Much more than just a child, this dragon is gifted with untapped power.\\n\" +\r\n                \"Battle Ox:A monster with tremendous power, it destroys enemies with a swing of its axe.\\n\" +\r\n                \"Battle Ox:A monster with tremendous power, it destroys enemies with a swing of its axe.\\n\" +\r\n                \"Battle Ox:A monster with tremendous power, it destroys enemies with a swing of its axe.\\n\" +\r\n                \"Curtain Of Dark Ones:A curtain that a spellcaster made, it is said to raise a dark power.\\n\" +\r\n                \"Curtain Of Dark Ones:A curtain that a spellcaster made, it is said to raise a dark power.\\n\" +\r\n                \"Curtain Of Dark Ones:A curtain that a spellcaster made, it is said to raise a dark power.\\n\" +\r\n                \"Fireyarou:A malevolent creature wrapped in flames that attacks enemies with intense fire.\\n\" +\r\n                \"Fireyarou:A malevolent creature wrapped in flames that attacks enemies with intense fire.\\n\" +\r\n                \"Fireyarou:A malevolent creature wrapped in flames that attacks enemies with intense fire.\\n\" +\r\n                \"Gate Guardian:Cannot be Normal Summoned/Set. Must first be Special Summoned (from your hand) by Tributing 1 \\\"Sanga of the Thunder\\\", \\\"Kazejin\\\", and \\\"Suijin\\\".\\n\" +\r\n                \"Gate Guardian:Cannot be Normal Summoned/Set. Must first be Special Summoned (from your hand) by Tributing 1 \\\"Sanga of the Thunder\\\", \\\"Kazejin\\\", and \\\"Suijin\\\".\\n\" +\r\n                \"Gate Guardian:Cannot be Normal Summoned/Set. Must first be Special Summoned (from your hand) by Tributing 1 \\\"Sanga of the Thunder\\\", \\\"Kazejin\\\", and \\\"Suijin\\\".\\n\" +\r\n                \"Haniwa:An earthen figure that protects the tomb of an ancient ruler.\\n\" +\r\n                \"Haniwa:An earthen figure that protects the tomb of an ancient ruler.\\n\" +\r\n                \"Haniwa:An earthen figure that protects the tomb of an ancient ruler.\\n\" +\r\n                \"Hero Of The East:Feel da strength ah dis sword-swinging samurai from da Far East.\\n\" +\r\n                \"Hero Of The East:Feel da strength ah dis sword-swinging samurai from da Far East.\\n\" +\r\n                \"Hero Of The East:Feel da strength ah dis sword-swinging samurai from da Far East.\\n\" +\r\n                \"Scanner:Once per turn, you can select 1 of your opponent's monsters that is removed from play. Until the End Phase, this card's name is treated as the selected monster's name, and this card has the same Attribute, Level, ATK, and DEF as the selected monster. If this card is removed from the field while this effect is applied, remove it from play.\\n\" +\r\n                \"Scanner:Once per turn, you can select 1 of your opponent's monsters that is removed from play. Until the End Phase, this card's name is treated as the selected monster's name, and this card has the same Attribute, Level, ATK, and DEF as the selected monster. If this card is removed from the field while this effect is applied, remove it from play.\\n\" +\r\n                \"Scanner:Once per turn, you can select 1 of your opponent's monsters that is removed from play. Until the End Phase, this card's name is treated as the selected monster's name, and this card has the same Attribute, Level, ATK, and DEF as the selected monster. If this card is removed from the field while this effect is applied, remove it from play.\\n\" +\r\n                \"Suijin:During damage calculation in your opponent's turn, if this card is being attacked: You can target the attacking monster; make that target's ATK 0 during damage calculation only (this is a Quick Effect). This effect can only be used once while this card is face-up on the field.\\n\" +\r\n                \"Suijin:During damage calculation in your opponent's turn, if this card is being attacked: You can target the attacking monster; make that target's ATK 0 during damage calculation only (this is a Quick Effect). This effect can only be used once while this card is face-up on the field.\\n\" +\r\n                \"Suijin:During damage calculation in your opponent's turn, if this card is being attacked: You can target the attacking monster; make that target's ATK 0 during damage calculation only (this is a Quick Effect). This effect can only be used once while this card is face-up on the field.\\n\" +\r\n                \"Spell and Traps:\\n\" +\r\n                \"Advanced Ritual Art:This card can be used to Ritual Summon any 1 Ritual Monster. You must also send Normal Monsters from your Deck to the Graveyard whose total Levels equal the Level of that Ritual Monster.\\n\" +\r\n                \"Advanced Ritual Art:This card can be used to Ritual Summon any 1 Ritual Monster. You must also send Normal Monsters from your Deck to the Graveyard whose total Levels equal the Level of that Ritual Monster.\\n\" +\r\n                \"Advanced Ritual Art:This card can be used to Ritual Summon any 1 Ritual Monster. You must also send Normal Monsters from your Deck to the Graveyard whose total Levels equal the Level of that Ritual Monster.\\n\" +\r\n                \"Black Pendant:The equipped monster gains 500 ATK. When this card is sent from the field to the Graveyard: Inflict 500 damage to your opponent.\\n\" +\r\n                \"Black Pendant:The equipped monster gains 500 ATK. When this card is sent from the field to the Graveyard: Inflict 500 damage to your opponent.\\n\" +\r\n                \"Black Pendant:The equipped monster gains 500 ATK. When this card is sent from the field to the Graveyard: Inflict 500 damage to your opponent.\\n\" +\r\n                \"Call Of The Haunted:Activate this card by targeting 1 monster in your GY; Special Summon that target in Attack Position. When this card leaves the field, destroy that monster. When that monster is destroyed, destroy this card.\\n\" +\r\n                \"Call Of The Haunted:Activate this card by targeting 1 monster in your GY; Special Summon that target in Attack Position. When this card leaves the field, destroy that monster. When that monster is destroyed, destroy this card.\\n\" +\r\n                \"Call Of The Haunted:Activate this card by targeting 1 monster in your GY; Special Summon that target in Attack Position. When this card leaves the field, destroy that monster. When that monster is destroyed, destroy this card.\\n\" +\r\n                \"Change Of Heart:Target 1 monster your opponent controls; take control of it until the End Phase.\\n\" +\r\n                \"Closed Forest:All Beast-Type monsters you control gain 100 ATK for each monster in your Graveyard. Field Spell Cards cannot be activated. Field Spell Cards cannot be activated during the turn this card is destroyed.\\n\" +\r\n                \"Closed Forest:All Beast-Type monsters you control gain 100 ATK for each monster in your Graveyard. Field Spell Cards cannot be activated. Field Spell Cards cannot be activated during the turn this card is destroyed.\\n\" +\r\n                \"Closed Forest:All Beast-Type monsters you control gain 100 ATK for each monster in your Graveyard. Field Spell Cards cannot be activated. Field Spell Cards cannot be activated during the turn this card is destroyed.\\n\" +\r\n                \"Dark Hole:Destroy all monsters on the field.\\n\" +\r\n                \"Dark Hole:Destroy all monsters on the field.\\n\" +\r\n                \"Dark Hole:Destroy all monsters on the field.\\n\" +\r\n                \"Forest:All Insect, Beast, Plant, and Beast-Warrior monsters on the field gain 200 ATK/DEF.\\n\" +\r\n                \"Forest:All Insect, Beast, Plant, and Beast-Warrior monsters on the field gain 200 ATK/DEF.\\n\" +\r\n                \"Forest:All Insect, Beast, Plant, and Beast-Warrior monsters on the field gain 200 ATK/DEF.\\n\" +\r\n                \"Harpies Feather Dust:Destroy all Spells and Traps your opponent controls.\\n\" +\r\n                \"Magnum Shield:Equip only to a Warrior-Type monster. Apply this effect, depending on its battle position.\\n\" +\r\n                \"Attack Position: It gains ATK equal to its original DEF.\\n\" +\r\n                \"Defense Position: It gains DEF equal to its original ATK.\\n\" +\r\n                \"Magnum Shield:Equip only to a Warrior-Type monster. Apply this effect, depending on its battle position.\\n\" +\r\n                \"Attack Position: It gains ATK equal to its original DEF.\\n\" +\r\n                \"Defense Position: It gains DEF equal to its original ATK.\\n\" +\r\n                \"Magnum Shield:Equip only to a Warrior-Type monster. Apply this effect, depending on its battle position.\\n\" +\r\n                \"Attack Position: It gains ATK equal to its original DEF.\\n\" +\r\n                \"Defense Position: It gains DEF equal to its original ATK.\\n\" +\r\n                \"Mind Crush:Declare 1 card name; if that card is in your opponent's hand, they must discard all copies of it, otherwise you discard 1 random card.\\n\" +\r\n                \"Mind Crush:Declare 1 card name; if that card is in your opponent's hand, they must discard all copies of it, otherwise you discard 1 random card.\\n\" +\r\n                \"Mind Crush:Declare 1 card name; if that card is in your opponent's hand, they must discard all copies of it, otherwise you discard 1 random card.\\n\" +\r\n                \"Monster Reborn:Target 1 monster in either GY; Special Summon it.\\n\" +\r\n                \"Monster Reborn:Target 1 monster in either GY; Special Summon it.\\n\" +\r\n                \"Monster Reborn:Target 1 monster in either GY; Special Summon it.\\n\" +\r\n                \"Raigeki:Destroy all monsters your opponent controls.\\n\".replaceAll(\"\\n\",\"\\r\\n\"),outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"showSideDeckTest\")\r\n    public void showSideDeckTest() throws Exception {\r\n        Assertions.assertThrows(DeckNotFound.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).showDeck(\"deck of kasra\", true);\r\n            }\r\n        });\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        DeckController.getInstance(player).showDeck(\"deck to check full main\", true);\r\n        Assertions.assertEquals(\"Deck: deck to check full main\\n\" +\r\n                \"Side deck:\\n\" +\r\n                \"Monsters:\\n\" +\r\n                \"Spell and Traps:\\n\".replaceAll(\"\\n\",\"\\r\\n\"),outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"add card to main deck full\")\r\n    public void addCardFullMainDeck() throws Exception {\r\n        player.setActiveDeck(player.getDeckByName(\"deck to check full main\"));\r\n        Assertions.assertThrows(ThreeSameCards.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.BABY_DRAGON.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n        });\r\n        Assertions.assertThrows(OneCardForLimited.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).addCardToDeck(SpellCard.CHANGE_OF_HEART.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n        });\r\n        for (int i = 0; i < 4; i++) {\r\n            player.addCardToUsersAllCards(TrapCard.MIND_CRUSH);\r\n        }\r\n\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            DeckController.getInstance(player).addCardToDeck(TrapCard.MIND_CRUSH.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n        }\r\n        Assertions.assertThrows(FullMainDeck.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).addCardToDeck(TrapCard.MAGIC_CYLINDER.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n        });\r\n        DeckController.getInstance(player).activateDeck(\"deck of kiana\");\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"add card to side deck full \")\r\n    public void addCardFullSideDeck() throws Exception {\r\n\r\n        DeckController.getInstance(player).createDeck(\"deck to check full side\");\r\n        player.setActiveDeck(player.getDeckByName(\"deck to check full side\"));\r\n\r\n        for (int i = 0; i < 4; i++) {\r\n            player.addCardToUsersAllCards(MonsterCard.SUIJIN);\r\n        }\r\n        for (int i = 0; i < 4; i++) {\r\n            player.addCardToUsersAllCards(MonsterCard.FIREYAROU);\r\n        }\r\n        for (int i = 0; i < 4; i++) {\r\n            player.addCardToUsersAllCards(MonsterCard.ALEXANDRITE_DRAGON);\r\n        }\r\n        for (int i = 0; i < 4; i++) {\r\n            player.addCardToUsersAllCards(MonsterCard.BABY_DRAGON);\r\n        }\r\n        for (int i = 0; i < 4; i++) {\r\n            player.addCardToUsersAllCards(MonsterCard.BATTLE_OX);\r\n        }\r\n\r\n        player.addCardToUsersAllCards(MonsterCard.BATTLE_WARRIOR);\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            DeckController.getInstance(player).addCardToDeck(\"Suijin\", player.getActiveDeck().getDeckName(), true, false);\r\n        }\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            DeckController.getInstance(player).addCardToDeck(\"Fireyarou\", player.getActiveDeck().getDeckName(), true, false);\r\n        }\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            DeckController.getInstance(player).addCardToDeck(MonsterCard.BATTLE_OX.getNamePascalCase(), player.getActiveDeck().getDeckName(), true, false);\r\n        }\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            DeckController.getInstance(player).addCardToDeck(MonsterCard.BABY_DRAGON.getNamePascalCase(), player.getActiveDeck().getDeckName(), true, false);\r\n        }\r\n\r\n        Assertions.assertThrows(ThreeSameCards.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.SUIJIN.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);\r\n            }\r\n        });\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            DeckController.getInstance(player).addCardToDeck(MonsterCard.ALEXANDRITE_DRAGON.getNamePascalCase(), player.getActiveDeck().getDeckName(), true, false);\r\n        }\r\n\r\n        Assertions.assertThrows(FullSideDeck.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.BATTLE_WARRIOR.getNamePascalCase(), player.getActiveDeck().getDeckName(), true, false);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"add card to player and deck\")\r\n    public void addCardToPlayerAndDeckTest() throws Exception {\r\n        DeckController.getInstance(player).createDeck(\"deck to check add card\");\r\n        player.setActiveDeck(player.getDeckByName(\"deck to check add card\"));\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        player.addCardToUsersAllCards(MonsterCard.SUIJIN);\r\n        player.addCardToUsersAllCards(MonsterCard.SUIJIN);\r\n        player.addCardToUsersAllCards(MonsterCard.FIREYAROU);\r\n        player.addCardToUsersAllCards(MonsterCard.FIREYAROU);\r\n        DeckController.getInstance(player).addCardToDeck(\"Suijin\", player.getActiveDeck().getDeckName(), false, false);\r\n        DeckController.getInstance(player).addCardToDeck(\"Fireyarou\", player.getActiveDeck().getDeckName(), false, false);\r\n        DeckController.getInstance(player).addCardToDeck(\"Suijin\", player.getActiveDeck().getDeckName(), true, false);\r\n        DeckController.getInstance(player).addCardToDeck(\"Fireyarou\", player.getActiveDeck().getDeckName(), true, false);\r\n        Assertions.assertThrows(CardNotFoundInUser.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).addCardToDeck(MonsterCard.FLAME_MANIPULATOR.getNamePascalCase(), player.getActiveDeck().getDeckName(), true, false);\r\n            }\r\n        });\r\n        player.addCardToUsersAllCards(MonsterCard.FIREYAROU);\r\n        Assertions.assertThrows(DeckNotFound.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).addCardToDeck(\"Fireyarou\", \"best deck ever\", true, false);\r\n            }\r\n        });\r\n        Assertions.assertEquals(2, player.getActiveDeck().getSideDeck().size());\r\n        Assertions.assertEquals(2, player.getActiveDeck().getMainDeck().size());\r\n        Assertions.assertEquals(\"card added to deck successfully\\r\\ncard added to deck successfully\\r\\ncard added to deck successfully\\r\\ncard added to deck successfully\\r\\n\", outContent.toString());\r\n        player.setActiveDeck(player.getDeckByName(\"deck of kiana\"));\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"delete deck\")\r\n    public void deleteDeck() throws Exception {\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        int firstSize = player.getAllDecks().size();\r\n        DeckController.getInstance(player).deleteDeck(\"third deck\");\r\n        int secondSize = player.getAllDecks().size();\r\n        Assertions.assertEquals(1, firstSize - secondSize);\r\n        Assertions.assertThrows(DeckNotFound.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).deleteDeck(\"deck number 4\");\r\n            }\r\n        });\r\n        int thirdSize = player.getAllDecks().size();\r\n        Assertions.assertEquals(0, thirdSize - secondSize);\r\n        Assertions.assertEquals(\"deck deleted successfully\\r\\n\", outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"activateDeck\")\r\n    public void activateDeck() throws Exception {\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        DeckController.getInstance(player).activateDeck(\"second deck\");\r\n        Assertions.assertEquals(\"deck activated successfully\\r\\n\", outContent.toString());\r\n        Assertions.assertThrows(DeckNotFound.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).activateDeck(\"deck number 4\");\r\n            }\r\n        });\r\n        DeckController.getInstance(player).activateDeck(\"deck of kiana\");\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"create deck repetitive deck name\")\r\n    public void createDeckRepetitiveDeckName() throws Exception {\r\n        Assertions.assertThrows(RepetitiveDeckName.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                DeckController.getInstance(player).createDeck(\"deck of kiana\");\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"create deck fine\")\r\n    public void createDeckFine() throws Exception {\r\n        int firstSize = player.getAllDecks().size();\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        DeckController.getInstance(player).createDeck(\"deck molayi\");\r\n        int secondSize = player.getAllDecks().size();\r\n        Assertions.assertEquals(1, secondSize - firstSize);\r\n        Assertions.assertEquals(\"deck created successfully!\\r\\n\", outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"testSelectCardPlayerMonsterZone with input more than 5 which should throw InvalidSelection\")\r\n    public void testSelectCardPlayerMonsterZoneMoreThan6() throws Exception {\r\n        final DuelController duelController = new DuelController(player, rival, 1);\r\n        Assertions.assertThrows(InvalidSelection.class, new Executable() {\r\n            public void execute() throws Throwable {\r\n                duelController.selectCardPlayerMonsterZone(6);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"testSelectCardPlayerMonsterZone with input less than 1 which should throw InvalidSelection\")\r\n    public void testSelectCardPlayerMonsterZoneLessThan1() throws Exception {\r\n        final DuelController duelController = new DuelController(player, rival, 1);\r\n        Assertions.assertThrows(InvalidSelection.class, new Executable() {\r\n            public void execute() throws Throwable {\r\n                duelController.selectCardPlayerMonsterZone(0);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"testSelectCardOpponentMonsterZone with input more than 5 which should throw InvalidSelection\")\r\n    public void testSelectCardOpponentMonsterZoneMoreThan6() throws Exception {\r\n        final DuelController duelController = new DuelController(player, rival, 1);\r\n        Assertions.assertThrows(InvalidSelection.class, new Executable() {\r\n            public void execute() throws Throwable {\r\n                duelController.selectCardOpponentMonsterZone(6);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"testSelectCardOpponentMonsterZone with input less than 1 which should throw InvalidSelection\")\r\n    public void testSelectCardOpponentMonsterZoneLessThan1() throws Exception {\r\n        final DuelController duelController = new DuelController(player, rival, 1);\r\n        Assertions.assertThrows(InvalidSelection.class, new Executable() {\r\n            public void execute() throws Throwable {\r\n                duelController.selectCardOpponentMonsterZone(0);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"testSelectCardPlayerTrapAndSpellZone with input more than 5 which should throw InvalidSelection\")\r\n    public void testSelectCardPlayerTrapAndSpellZoneMoreThan6() throws Exception {\r\n        final DuelController duelController = new DuelController(player, rival, 1);\r\n        Assertions.assertThrows(InvalidSelection.class, new Executable() {\r\n            public void execute() throws Throwable {\r\n                duelController.selectCardPlayerTrapAndSpellZone(6);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"testSelectCardPlayerTrapAndSpellZone with input less than 1 which should throw InvalidSelection\")\r\n    public void testSelectCardPlayerTrapAndSpellZoneLessThan1() throws Exception {\r\n        player.setActiveDeck(player.getDeckByName(\"deck to check full main\"));\r\n        /*ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        System.setOut(new PrintStream(outContent));\r\n        System.out.println(player.getActiveDeck().getMainSize() + \" \" + player.getUsername());\r\n        Assertions.assertEquals(\"60 kiana_msz\\r\\n\", outContent.toString());*/\r\n        final DuelController duelController = new DuelController(player, rival, 1);\r\n        Assertions.assertThrows(InvalidSelection.class, new Executable() {\r\n            public void execute() throws Throwable {\r\n                duelController.selectCardPlayerTrapAndSpellZone(0);\r\n            }\r\n        });\r\n        player.setActiveDeck(player.getDeckByName(\"deck of kiana\"));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"testSelectCardOpponentTrapAndSpellZone with input more than 5 which should throw InvalidSelection\")\r\n    public void testSelectCardOpponentTrapAndSpellZoneMoreThan6() throws Exception {\r\n        final DuelController duelController = new DuelController(player, rival, 1);\r\n        Assertions.assertThrows(InvalidSelection.class, new Executable() {\r\n            public void execute() throws Throwable {\r\n                duelController.selectCardOpponentTrapAndSpellZone(6);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"testSelectCardOpponentTrapAndSpellZone with input less than 1 which should throw InvalidSelection\")\r\n    public void testSelectCardOpponentTrapAndSpellZoneLessThan1() throws Exception {\r\n        final DuelController duelController = new DuelController(player, rival, 1);\r\n        Assertions.assertThrows(InvalidSelection.class, new Executable() {\r\n            public void execute() throws Throwable {\r\n                duelController.selectCardOpponentTrapAndSpellZone(0);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"createUser everything is fine\")\r\n    public void createUserFine() throws Exception {\r\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n        PrintStream sysOutBackup = System.out;\r\n        System.setOut(new PrintStream(outContent));\r\n        LogInController.getInstance().createUser(\"CHECK\", \"check\", \"ChEcK\");\r\n        Assertions.assertEquals(\"user created successfully!\\r\\n\", outContent.toString());\r\n        System.setOut(sysOutBackup);\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"Repetitive username check\")\r\n    public void RepetitiveUsername() throws Exception {\r\n        Assertions.assertThrows(RepetitiveUsername.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                LogInController.getInstance().createUser(\"kiana_msz\", \"12345\", \"kiana\");\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Repetitive nickname check\")\r\n    public void RepetitiveNickname() throws Exception {\r\n        Assertions.assertThrows(RepetitiveNickname.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                LogInController.getInstance().createUser(\"kiana_m\", \"12345\", \"kiana\");\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"loginUser UserNotFound\")\r\n    public void loginUserUserNotFound() throws Exception {\r\n        Assertions.assertThrows(UsernameNotFound.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                LogInController.getInstance().loginUser(\"kasra\", \"123\");\r\n            }\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"loginUser WrongPassword\")\r\n    public void loginUserWrongPassword() throws Exception {\r\n        Assertions.assertThrows(WrongPassword.class, new Executable() {\r\n            @Override\r\n            public void execute() throws Throwable {\r\n                LogInController.getInstance().loginUser(\"hamriouz\", \"123\");\r\n            }\r\n        });\r\n    }\r\n\r\n    //    @Test\r\n    //    @DisplayName(\"game\")\r\n    //    public void gameTest(){\r\n    //        DuelController duelController = new DuelController(player,rival,3);\r\n    //        //duelController.startNewGame(null);\r\n    //        duelController.startNewGame(player);\r\n    //        duelController.startNewGame(rival);\r\n    //    }\r\n\r\n    //    @Test\r\n    //    @DisplayName(\"startDrawPhaseTest\")\r\n    //    public void startDrawPhaseTest(){\r\n    //        DuelController duelController = new DuelController(player,rival,3);\r\n    //        duelController.startDrawPhase(false);\r\n    //    }\r\n\r\n\r\n\r\n    //    @Test\r\n//    @DisplayName(\"test for exchange card between main and side\")\r\n//    public void testExchangeCardBetweenMainAndSide() throws Exception {\r\n//        player.addCardToUsersAllCards(MonsterCard.CRAWLING_DRAGON);\r\n//        DeckController.getInstance(player).addCardToDeck(MonsterCard.CRAWLING_DRAGON.getNamePascalCase(),\"deck to check full main\",true, false );\r\n//        DeckController.getInstance(player).showDeck(\"deck to check full main\",false);\r\n//        DeckController.getInstance(player).showDeck(player.getActiveDeck().getDeckName(),true);\r\n//        DuelController duelController = new DuelController(player,rival,3);\r\n//        ByteArrayInputStream in = new ByteArrayInputStream(\"YES\\nMonster Reborn\\nCrawling Dragon\".getBytes());\r\n//        System.setIn(in);\r\n//        rival.setLifePoint(0);\r\n//\r\n//        duelController.manageEndGame();\r\n//\r\n//\r\n//\r\n//\r\n//    }\r\n\r\n\r\n     /*@Test\r\n    @DisplayName(\"manage end game test\")\r\n    public void manageEndGameTest(){\r\n        User hossein = new User(\"hossein\",\"hossein\",\"hossein\");\r\n        User hasan = new User(\"hasan\",\"hasan\",\"hasan\");\r\n        //Deck deckMolayi = new Deck(\"deck molayi\");\r\n        hasan.addDeck(player.getDeckByName(\"deck to check full main\"));\r\n        hossein.addDeck(player.getDeckByName(\"deck to check full main\"));\r\n        hasan.setActiveDeck(hasan.getDeckByName(\"deck to check full main\"));\r\n        hossein.setActiveDeck(hossein.getDeckByName(\"deck to check full main\"));\r\n        ByteArrayInputStream in = new ByteArrayInputStream(\"no\\nno\\nno\\n\".getBytes());\r\n        System.setIn(in);\r\n        DuelController duelController = new DuelController(hasan,hossein,3);\r\n        hasan.setLifePoint(0);\r\n        duelController.manageEndGame();\r\n        hasan.setLifePoint(0);\r\n        duelController.manageEndGame();\r\n//        hasan.setLifePoint(0);\r\n//        duelController.manageEndGame();\r\n    }*/\r\n\r\n    /*@Test\r\n    @DisplayName(\"test menu enter\")\r\n    public void testMenuEnter() {\r\n        InputStream sysInBackup = System.in; // backup System.in to restore it later\r\n        PrintStream sysOutBackup = System.out;\r\n        ByteArrayInputStream in = new ByteArrayInputStream(\"\\nmenu enter Deck\\nmenu exit\\n\".getBytes());\r\n        System.setIn(in);\r\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\r\n        System.setOut(new PrintStream(out));\r\n        LogInView.getInstance().getCommandForLogin();\r\n        Assertions.assertEquals(\"please login first\\r\\n\", out.toString());\r\n        System.setIn(sysInBackup);\r\n        System.setOut(sysOutBackup);\r\n        System.out.println(\"5\");\r\n    }*/\r\n\r\n    //    @Test\r\n//    @DisplayName(\"loginUser fine\")\r\n//    public void loginUserFine() throws Exception {\r\n//        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\r\n//        System.setOut(new PrintStream(outContent));\r\n//        ByteArrayInputStream in = new ByteArrayInputStream(\"user login -u kiana_msz -p 12345\\nuser logout\\nmenu exit\\n\".getBytes());\r\n//        System.setIn(in);\r\n//        LogInView.getInstance().getCommandForLogin();\r\n//        Assertions.assertEquals(\"user logged in successfully!\\r\\nuser logged out successfully!\\r\\n\",outContent.toString());\r\n//    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/main/java/test.java	(revision b13b9ddcb0710c6ae8e68c37170672d6f9f2f084)
-+++ src/main/java/test.java	(date 1624740374805)
-@@ -1,5 +1,3 @@
--//package controller;
--
- import controller.DeckController;
- import controller.exeption.*;
- import model.*;
-@@ -24,17 +22,49 @@
- 
-     static User player;
-     static User rival;
-+    static User checker;
- 
-     @BeforeAll
-     static void toBeDoneBefore() throws Exception {
-         player = new User("kiana_msz", "kiana", "12345");
--        Deck deck = new Deck("deck of kiana");
--        Deck deck1 = new Deck("deck of hamraz");
--        player.addDeck(deck);
--        player.setActiveDeck(deck);
-+        Deck deckOfKiana = new Deck("deck of kiana");
-+        Deck deckOfHamraz = new Deck("deck of hamraz");
-+        player.addDeck(deckOfKiana);
-+        player.setActiveDeck(deckOfKiana);
-+        for (int i = 0; i < 4; i++) {
-+            player.addCardToUsersAllCards(MonsterCard.HANIWA);
-+        }
-+        for (int i = 0; i < 4; i++) {
-+            player.addCardToUsersAllCards(MonsterCard.CURTAIN_OF_DARK_ONES);
-+        }
-+        for (int i = 0; i < 4; i++) {
-+            player.addCardToUsersAllCards(MonsterCard.GATE_GUARDIAN);
-+        }
-+        for (int i = 0; i < 4; i++) {
-+            player.addCardToUsersAllCards(MonsterCard.HERO_OF_THE_EAST);
-+        }
-+        for (int i = 0; i < 4; i++) {
-+            player.addCardToUsersAllCards(MonsterCard.SCANNER);
-+        }
-+        for (int i = 0; i < 3; i++) {
-+            DeckController.getInstance(player).addCardToDeck(MonsterCard.HANIWA.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);
-+        }
-+        for (int i = 0; i < 3; i++) {
-+            DeckController.getInstance(player).addCardToDeck(MonsterCard.CURTAIN_OF_DARK_ONES.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);
-+        }
-+        for (int i = 0; i < 3; i++) {
-+            DeckController.getInstance(player).addCardToDeck(MonsterCard.GATE_GUARDIAN.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);
-+        }
-+        for (int i = 0; i < 3; i++) {
-+            DeckController.getInstance(player).addCardToDeck(MonsterCard.HERO_OF_THE_EAST.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);
-+        }
-+
-+        for (int i = 0; i < 3; i++) {
-+            DeckController.getInstance(player).addCardToDeck(MonsterCard.SCANNER.getNamePascalCase(), player.getActiveDeck().getDeckName(), false, false);
-+        }
-         rival = new User("hamriouz", "hamraz", "12345");
--        rival.addDeck(deck1);
--        rival.setActiveDeck(deck1);
-+        rival.addDeck(deckOfHamraz);
-+        rival.setActiveDeck(deckOfHamraz);
-         for (int i = 0; i < 3; i++) {
-             rival.addCardToUsersAllCards(MonsterCard.YOMI_SHIP);
-             DeckController.getInstance(rival).addCardToDeck(MonsterCard.YOMI_SHIP.getNamePascalCase(), "deck of hamraz", false, false);
-@@ -49,10 +79,11 @@
-         }
-         rival.addCardToUsersAllCards(MonsterCard.ALEXANDRITE_DRAGON);
-         DeckController.getInstance(rival).addCardToDeck(MonsterCard.ALEXANDRITE_DRAGON.getNamePascalCase(), "deck of hamraz", false, false);
--        deck = new Deck("second deck");
--        player.addDeck(deck);
--        deck = new Deck("third deck");
--        player.addDeck(deck);
-+        Deck secondDeckOfKiana = new Deck("second deck");
-+        player.addDeck(deckOfKiana);
-+        Deck thirdDeckOfKiana = new Deck("third deck");
-+        player.addDeck(secondDeckOfKiana);
-+        player.addDeck(thirdDeckOfKiana);
-         {
-             DeckController.getInstance(player).createDeck("deck to check full main");
-             player.setActiveDeck(player.getDeckByName("deck to check full main"));
-@@ -227,7 +258,12 @@
- 
- 
-         }
--        player.setActiveDeck(player.getDeckByName("deck of kiana"));
-+        player.setActiveDeck(deckOfKiana);
-+        checker = new User("checkMolayi","molayitarinCheck","bemolaKeCheck");
-+        checker.addDeck(player.getDeckByName("deck of kiana"));
-+        checker.setScore(500);
-+        checker.addDeck(rival.getDeckByName(rival.getActiveDeck().getDeckName()));
-+        checker.setActiveDeck(checker.getDeckByName("deck of kiana"));
-     }
- 
- 
-@@ -292,75 +328,6 @@
-         duelController.setRival(rival);
-     }
- 
--
--    @Test
--    @DisplayName("go to menu test")
--    public void goToMenuTestDeck() {
--        ByteArrayInputStream in = new ByteArrayInputStream("menu show-current\nmenu exit\nuser logout\n".getBytes());
--        System.setIn(in);
--        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
--        PrintStream sysOutBackup = System.out;
--        System.setOut(new PrintStream(outContent));
--        MainController.getInstance(player).goToMenu("Deck");
--        //Assertions.assertEquals("Deck Menu\r\n",outContent.toString());
--        System.setOut(sysOutBackup);
--    }
--
--    @Test
--    @DisplayName("go to menu test")
--    public void goToMenuTestScoreBoard() {
--        ByteArrayInputStream in = new ByteArrayInputStream("menu show-current\nmenu exit\nuser logout\n".getBytes());
--        System.setIn(in);
--        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
--        PrintStream sysOutBackup = System.out;
--        System.setOut(new PrintStream(outContent));
--        MainController.getInstance(player).goToMenu("ScoreBoard");
--        //Assertions.assertEquals("Scoreboard Menu\r\n",outContent.toString());
--        System.setOut(sysOutBackup);
--    }
--
--
--    @Test
--    @DisplayName("go to menu test")
--    public void goToMenuTestProfile() {
--        ByteArrayInputStream in = new ByteArrayInputStream("menu show-current\nmenu exit\nuser logout\n".getBytes());
--        System.setIn(in);
--        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
--        PrintStream sysOutBackup = System.out;
--        System.setOut(new PrintStream(outContent));
--        MainController.getInstance(player).goToMenu("Profile");
--        //Assertions.assertEquals("Profile Menu\r\n",outContent.toString());
--        System.setOut(sysOutBackup);
--    }
--
--
--    @Test
--    @DisplayName("go to menu test")
--    public void goToMenuTestShop() {
--        ByteArrayInputStream in = new ByteArrayInputStream("menu show-current\nmenu exit\nuser logout\n".getBytes());
--        System.setIn(in);
--        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
--        PrintStream sysOutBackup = System.out;
--        System.setOut(new PrintStream(outContent));
--        MainController.getInstance(player).goToMenu("Shop");
--        //Assertions.assertEquals("Shop Menu\r\n",outContent.toString());
--        System.setOut(sysOutBackup);
--    }
--
--
--    @Test
--    @DisplayName("go to menu test")
--    public void goToMenuTestImportExport() {
--        ByteArrayInputStream in = new ByteArrayInputStream("menu show-current\nmenu exit\nuser logout\n".getBytes());
--        System.setIn(in);
--        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
--        PrintStream sysOutBackup = System.out;
--        System.setOut(new PrintStream(outContent));
--        MainController.getInstance(player).goToMenu("ImportExport");
--        //Assertions.assertEquals("Import-Export Menu\r\n",outContent.toString());
--        System.setOut(sysOutBackup);
--    }
--
-     @Test
-     @DisplayName("test for scoreboard")
-     public void testForScoreBoard() throws Exception {
-@@ -381,11 +348,12 @@
-         System.setOut(new PrintStream(outContent));
-         ScoreBoardController.getInstance(player).showScoreboard();
-         Assertions.assertEquals("1- gholi: 3000\n" +
--                "1- hamraz: 3000\n" +
-                 "1- kholi: 3000\n" +
--                "4- soli: 2000\n" +
--                "5- ali: 1000\n" +
--                "5- goli: 1000\n" +
-+                "3- soli: 2000\n" +
-+                "4- ali: 1000\n" +
-+                "4- goli: 1000\n" +
-+                "6- molayitarinCheck: 500\n" +
-+                "7- hamraz: 0\n" +
-                 "7- kiana: 0\n".replaceAll("\n","\r\n"),outContent.toString());
-         System.setOut(sysOutBackup);
-     }
-@@ -635,17 +603,21 @@
-                 "Change Of Heart:Target 1 monster your opponent controls; take control of it until the End Phase.\n" +
-                 "Closed Forest:All Beast-Type monsters you control gain 100 ATK for each monster in your Graveyard. Field Spell Cards cannot be activated. Field Spell Cards cannot be activated during the turn this card is destroyed.\n" +
-                 "Curtain Of Dark Ones:A curtain that a spellcaster made, it is said to raise a dark power.\n" +
-+                "Curtain Of Dark Ones:A curtain that a spellcaster made, it is said to raise a dark power.\n" +
-                 "Dark Hole:Destroy all monsters on the field.\n" +
-                 "Fireyarou:A malevolent creature wrapped in flames that attacks enemies with intense fire.\n" +
-                 "Fireyarou:A malevolent creature wrapped in flames that attacks enemies with intense fire.\n" +
-                 "Fireyarou:A malevolent creature wrapped in flames that attacks enemies with intense fire.\n" +
-                 "Forest:All Insect, Beast, Plant, and Beast-Warrior monsters on the field gain 200 ATK/DEF.\n" +
-                 "Gate Guardian:Cannot be Normal Summoned/Set. Must first be Special Summoned (from your hand) by Tributing 1 \"Sanga of the Thunder\", \"Kazejin\", and \"Suijin\".\n" +
-+                "Gate Guardian:Cannot be Normal Summoned/Set. Must first be Special Summoned (from your hand) by Tributing 1 \"Sanga of the Thunder\", \"Kazejin\", and \"Suijin\".\n" +
-+                "Haniwa:An earthen figure that protects the tomb of an ancient ruler.\n" +
-                 "Haniwa:An earthen figure that protects the tomb of an ancient ruler.\n" +
-                 "Harpies Feather Dust:Destroy all Spells and Traps your opponent controls.\n" +
-                 "Harpies Feather Dust:Destroy all Spells and Traps your opponent controls.\n" +
-                 "Harpies Feather Dust:Destroy all Spells and Traps your opponent controls.\n" +
-                 "Hero Of The East:Feel da strength ah dis sword-swinging samurai from da Far East.\n" +
-+                "Hero Of The East:Feel da strength ah dis sword-swinging samurai from da Far East.\n" +
-                 "Magic Cylinder:When an opponent's monster declares an attack: Target the attacking monster; negate the attack, and if you do, inflict damage to your opponent equal to its ATK.\n" +
-                 "Magic Cylinder:When an opponent's monster declares an attack: Target the attacking monster; negate the attack, and if you do, inflict damage to your opponent equal to its ATK.\n" +
-                 "Magic Cylinder:When an opponent's monster declares an attack: Target the attacking monster; negate the attack, and if you do, inflict damage to your opponent equal to its ATK.\n" +
-@@ -663,6 +635,7 @@
-                 "Raigeki:Destroy all monsters your opponent controls.\n" +
-                 "Raigeki:Destroy all monsters your opponent controls.\n" +
-                 "Scanner:Once per turn, you can select 1 of your opponent's monsters that is removed from play. Until the End Phase, this card's name is treated as the selected monster's name, and this card has the same Attribute, Level, ATK, and DEF as the selected monster. If this card is removed from the field while this effect is applied, remove it from play.\n" +
-+                "Scanner:Once per turn, you can select 1 of your opponent's monsters that is removed from play. Until the End Phase, this card's name is treated as the selected monster's name, and this card has the same Attribute, Level, ATK, and DEF as the selected monster. If this card is removed from the field while this effect is applied, remove it from play.\n" +
-                 "Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\n" +
-                 "Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\n" +
-                 "Silver Fang:A snow wolf that's beautiful to the eye, but absolutely vicious in battle.\n" +
-@@ -731,28 +704,6 @@
-         System.setOut(sysOutBackup);
- 
-     }
--
--    @Test
--    @DisplayName("showAllDecksTest")
--    public void showAllDecksTest() {
--        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
--        PrintStream sysOutBackup = System.out;
--        System.setOut(new PrintStream(outContent));
--        DeckController.getInstance(player).showAllDecks();
--        Assertions.assertEquals("Decks:\n" +
--                "Active deck:\n" +
--                "deck to check full side: main deck 0, side deck 15, invalid\n" +
--                "Other decks:\n" +
--                "@deck of kiana: main deck 0, side deck 0, invalid\n" +
--                "@deck to check full main: main deck 52, side deck 0, valid\n" +
--                "deck of kiana: main deck 0, side deck 0, invalid\n" +
--                "deck to check add card: main deck 2, side deck 2, invalid\n" +
--                "deck to check full main: main deck 60, side deck 0, valid\n" +
--                "second deck: main deck 0, side deck 0, invalid\n" +
--                "third deck: main deck 0, side deck 0, invalid\n".replaceAll("\n","\r\n"),outContent.toString());
--        System.setOut(sysOutBackup);
--    }
--
- 
-     @Test
-     @DisplayName("showMainDeckTest")
-@@ -1116,10 +1067,6 @@
-     @DisplayName("testSelectCardPlayerTrapAndSpellZone with input less than 1 which should throw InvalidSelection")
-     public void testSelectCardPlayerTrapAndSpellZoneLessThan1() throws Exception {
-         player.setActiveDeck(player.getDeckByName("deck to check full main"));
--        /*ByteArrayOutputStream outContent = new ByteArrayOutputStream();
--        System.setOut(new PrintStream(outContent));
--        System.out.println(player.getActiveDeck().getMainSize() + " " + player.getUsername());
--        Assertions.assertEquals("60 kiana_msz\r\n", outContent.toString());*/
-         final DuelController duelController = new DuelController(player, rival, 1);
-         Assertions.assertThrows(InvalidSelection.class, new Executable() {
-             public void execute() throws Throwable {
-@@ -1207,90 +1154,86 @@
-         });
-     }
- 
--    //    @Test
--    //    @DisplayName("game")
--    //    public void gameTest(){
--    //        DuelController duelController = new DuelController(player,rival,3);
--    //        //duelController.startNewGame(null);
--    //        duelController.startNewGame(player);
--    //        duelController.startNewGame(rival);
--    //    }
--
--    //    @Test
--    //    @DisplayName("startDrawPhaseTest")
--    //    public void startDrawPhaseTest(){
--    //        DuelController duelController = new DuelController(player,rival,3);
--    //        duelController.startDrawPhase(false);
--    //    }
- 
- 
-+    @Test
-+    @DisplayName("showAllDecksTest")
-+    public void showAllDecksTest() {
-+        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-+        PrintStream sysOutBackup = System.out;
-+        System.setOut(new PrintStream(outContent));
-+        DeckController.getInstance(checker).showAllDecks();
-+        Assertions.assertEquals("Decks:\n" +
-+                "Active deck:\n" +
-+                "deck of kiana: main deck 15, side deck 0, invalid\n" +
-+                "Other decks:\n" +
-+                "deck of hamraz: main deck 10, side deck 0, invalid\n".replaceAll("\n","\r\n"),outContent.toString());
-+        System.setOut(sysOutBackup);
-+    }
- 
--    //    @Test
--//    @DisplayName("test for exchange card between main and side")
--//    public void testExchangeCardBetweenMainAndSide() throws Exception {
--//        player.addCardToUsersAllCards(MonsterCard.CRAWLING_DRAGON);
--//        DeckController.getInstance(player).addCardToDeck(MonsterCard.CRAWLING_DRAGON.getNamePascalCase(),"deck to check full main",true, false );
--//        DeckController.getInstance(player).showDeck("deck to check full main",false);
--//        DeckController.getInstance(player).showDeck(player.getActiveDeck().getDeckName(),true);
--//        DuelController duelController = new DuelController(player,rival,3);
--//        ByteArrayInputStream in = new ByteArrayInputStream("YES\nMonster Reborn\nCrawling Dragon".getBytes());
--//        System.setIn(in);
--//        rival.setLifePoint(0);
--//
--//        duelController.manageEndGame();
--//
--//
--//
--//
--//    }
- 
--
--     /*@Test
--    @DisplayName("manage end game test")
--    public void manageEndGameTest(){
--        User hossein = new User("hossein","hossein","hossein");
--        User hasan = new User("hasan","hasan","hasan");
--        //Deck deckMolayi = new Deck("deck molayi");
--        hasan.addDeck(player.getDeckByName("deck to check full main"));
--        hossein.addDeck(player.getDeckByName("deck to check full main"));
--        hasan.setActiveDeck(hasan.getDeckByName("deck to check full main"));
--        hossein.setActiveDeck(hossein.getDeckByName("deck to check full main"));
--        ByteArrayInputStream in = new ByteArrayInputStream("no\nno\nno\n".getBytes());
-+    @Test
-+    @DisplayName("go to menu test")
-+    public void goToMenuTestDeck() {
-+        ByteArrayInputStream in = new ByteArrayInputStream("menu show-current\nmenu exit\nuser logout\n".getBytes());
-         System.setIn(in);
--        DuelController duelController = new DuelController(hasan,hossein,3);
--        hasan.setLifePoint(0);
--        duelController.manageEndGame();
--        hasan.setLifePoint(0);
--        duelController.manageEndGame();
--//        hasan.setLifePoint(0);
--//        duelController.manageEndGame();
--    }*/
--
--    /*@Test
--    @DisplayName("test menu enter")
--    public void testMenuEnter() {
--        InputStream sysInBackup = System.in; // backup System.in to restore it later
-+        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-         PrintStream sysOutBackup = System.out;
--        ByteArrayInputStream in = new ByteArrayInputStream("\nmenu enter Deck\nmenu exit\n".getBytes());
-+        System.setOut(new PrintStream(outContent));
-+        MainController.getInstance(player).goToMenu("Deck");
-+        System.setOut(sysOutBackup);
-+    }
-+
-+    @Test
-+    @DisplayName("go to menu test")
-+    public void goToMenuTestScoreBoard() {
-+        ByteArrayInputStream in = new ByteArrayInputStream("menu show-current\nmenu exit\nuser logout\n".getBytes());
-+        System.setIn(in);
-+        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-+        PrintStream sysOutBackup = System.out;
-+        System.setOut(new PrintStream(outContent));
-+        MainController.getInstance(player).goToMenu("ScoreBoard");
-+        System.setOut(sysOutBackup);
-+    }
-+
-+
-+    @Test
-+    @DisplayName("go to menu test")
-+    public void goToMenuTestProfile() {
-+        ByteArrayInputStream in = new ByteArrayInputStream("menu show-current\nmenu exit\nuser logout\n".getBytes());
-         System.setIn(in);
--        ByteArrayOutputStream out = new ByteArrayOutputStream();
--        System.setOut(new PrintStream(out));
--        LogInView.getInstance().getCommandForLogin();
--        Assertions.assertEquals("please login first\r\n", out.toString());
--        System.setIn(sysInBackup);
-+        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-+        PrintStream sysOutBackup = System.out;
-+        System.setOut(new PrintStream(outContent));
-+        MainController.getInstance(player).goToMenu("Profile");
-         System.setOut(sysOutBackup);
--        System.out.println("5");
--    }*/
-+    }
-+
-+
-+    @Test
-+    @DisplayName("go to menu test")
-+    public void goToMenuTestShop() {
-+        ByteArrayInputStream in = new ByteArrayInputStream("menu show-current\nmenu exit\nuser logout\n".getBytes());
-+        System.setIn(in);
-+        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-+        PrintStream sysOutBackup = System.out;
-+        System.setOut(new PrintStream(outContent));
-+        MainController.getInstance(player).goToMenu("Shop");
-+        System.setOut(sysOutBackup);
-+    }
-+
- 
--    //    @Test
--//    @DisplayName("loginUser fine")
--//    public void loginUserFine() throws Exception {
--//        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
--//        System.setOut(new PrintStream(outContent));
--//        ByteArrayInputStream in = new ByteArrayInputStream("user login -u kiana_msz -p 12345\nuser logout\nmenu exit\n".getBytes());
--//        System.setIn(in);
--//        LogInView.getInstance().getCommandForLogin();
--//        Assertions.assertEquals("user logged in successfully!\r\nuser logged out successfully!\r\n",outContent.toString());
--//    }
-+    @Test
-+    @DisplayName("go to menu test")
-+    public void goToMenuTestImportExport() {
-+        ByteArrayInputStream in = new ByteArrayInputStream("menu show-current\nmenu exit\nuser logout\n".getBytes());
-+        System.setIn(in);
-+        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-+        PrintStream sysOutBackup = System.out;
-+        System.setOut(new PrintStream(outContent));
-+        MainController.getInstance(player).goToMenu("ImportExport");
-+        System.setOut(sysOutBackup);
-+    }
-+
- 
- }
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0b1707ad-3e75-4310-9619-956ec670ae1a\" name=\"Default Changelist\" comment=\"twin twister + spell absorption\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controller/DuelController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controller/DuelController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/SpellAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/SpellAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/SpellCard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/SpellCard.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/TakeActionCase.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/TakeActionCase.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1tf7blqKJ2Y0dLvEX2lrUssvKzj\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../project_team_17_3/src\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"project.structure.last.edited\" value=\"SDKs\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"restartRequiresConfirmation\" value=\"false\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settings.project.statistic.project.settings\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"controller.exeption\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration default=\"true\" type=\"ArquillianTestNG\" factoryName=\"\" nameIsGenerated=\"true\">\r\n      <option name=\"arquillianRunConfiguration\">\r\n        <value>\r\n          <option name=\"containerStateName\" value=\"\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"TEST_OBJECT\" value=\"CLASS\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"1.8\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"project_team_17\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MainViewGraphic\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"view.MainViewGraphic\" />\r\n      <module name=\"project_team_17\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"view.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SignUpViewGraphic\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"view.SignUpViewGraphic\" />\r\n      <module name=\"project_team_17_2\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"view.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"project_team_17\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test.testForMinFinder\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"project_team_17_2\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test\" />\r\n      <option name=\"METHOD_NAME\" value=\"testForMinFinder\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.test\" />\r\n        <item itemvalue=\"JUnit.test.testForMinFinder\" />\r\n        <item itemvalue=\"Application.MainViewGraphic\" />\r\n        <item itemvalue=\"Application.SignUpViewGraphic\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"StructuralSearchPlugin\">\r\n    <searchConfiguration name=\"Unnamed\" created=\"1624627910553\" text=\"/* $CommentContent$ */\" recursive=\"false\" caseInsensitive=\"false\" type=\"JAVA\" pattern_context=\"default\" scope_type=\"PROJECT\" scope_descriptor=\"\" history=\"1\">\r\n      <constraint name=\"__context__\" within=\"\" contains=\"\" />\r\n      <constraint name=\"CommentContent\" within=\"\" contains=\"\" />\r\n    </searchConfiguration>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0b1707ad-3e75-4310-9619-956ec670ae1a\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1623148364579</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1623148364579</updated>\r\n      <workItem from=\"1624545878199\" duration=\"3232000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"ScoreBoardViewGraphic.java\">\r\n      <created>1623149665559</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623149665559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"ScoreBoardViewGraphic.java\">\r\n      <created>1623149688409</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623149688409</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Error sign up\">\r\n      <created>1623151044078</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623151044078</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"model.SpellCard.java&#10;Monster Reborn + Terraforming\">\r\n      <created>1623868346229</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623868346229</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"model.SpellCard.java&#10;RAIGEKI + POT_OF_GREED\">\r\n      <created>1623946393997</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623946393997</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Yami SpellCard.java\">\r\n      <created>1624002906129</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624002906129</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Forest &amp; Closed Forest&#10;SpellCard.java\">\r\n      <created>1624012207305</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624012207305</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"debug import user\">\r\n      <created>1624093680512</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624093680512</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"debug import user o baghie import ha\">\r\n      <created>1624099929742</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624099929742</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"kiana test error fix\">\r\n      <created>1624533248061</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624533248061</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"show all cards debug\">\r\n      <created>1624546002241</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624546002241</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"jabejayie cheat money\">\r\n      <created>1624547044985</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624547044985</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"draw phase automatic\">\r\n      <created>1624556390073</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624556390073</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"debug1\">\r\n      <created>1624625286861</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624625286861</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"debug2\">\r\n      <created>1624639165113</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624639165113</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"ai\">\r\n      <created>1624641323564</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624641323564</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"debug attack1\">\r\n      <created>1624643600247</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624643600247</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"debug attack2\">\r\n      <created>1624645817335</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624645817335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"debug attack3\">\r\n      <created>1624646566864</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624646566864</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"debug attack4\">\r\n      <created>1624650239704</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624650239704</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"debug show card\">\r\n      <created>1624653667478</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624653667478</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"debug show card2\">\r\n      <created>1624654145122</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624654145122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"debug takeAction1\">\r\n      <created>1624702088038</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624702088038</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"debug command knight2\">\r\n      <created>1624703733833</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624703733833</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"nothing\">\r\n      <created>1624704514853</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624704514853</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"GATE_GUARDIAN\">\r\n      <created>1624709705904</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624709705904</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"SPELL_ABSORPTION debug1\">\r\n      <created>1624710730390</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624710730390</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"tributeForSummon debug\">\r\n      <created>1624712073940</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624712073940</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Full spell and trap zone\">\r\n      <created>1624713959005</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624713959005</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"continuous spell card\">\r\n      <created>1624715726136</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624715726136</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"suijin debug 1\">\r\n      <created>1624717829951</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624717829951</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"suijin debug 2\">\r\n      <created>1624719651615</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624719651615</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"gate gaurdian debug\">\r\n      <created>1624721450582</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624721450582</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"activate spell debug 1\">\r\n      <created>1624725085666</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624725085666</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"AIFullDebug + monster reborn\">\r\n      <created>1624729177752</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624729177752</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"twin twister + spell absorption\">\r\n      <created>1624737729186</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624737729186</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"37\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"jabejayie cheat money\" />\r\n    <MESSAGE value=\"draw phase automatic\" />\r\n    <MESSAGE value=\"debug1\" />\r\n    <MESSAGE value=\"debug2\" />\r\n    <MESSAGE value=\"ai\" />\r\n    <MESSAGE value=\"debug attack1\" />\r\n    <MESSAGE value=\"debug attack2\" />\r\n    <MESSAGE value=\"debug attack3\" />\r\n    <MESSAGE value=\"debug attack4\" />\r\n    <MESSAGE value=\"debug show card\" />\r\n    <MESSAGE value=\"debug show card2\" />\r\n    <MESSAGE value=\"debug takeAction1\" />\r\n    <MESSAGE value=\"debug command knight2\" />\r\n    <MESSAGE value=\"nothing\" />\r\n    <MESSAGE value=\"GATE_GUARDIAN\" />\r\n    <MESSAGE value=\"SPELL_ABSORPTION debug1\" />\r\n    <MESSAGE value=\"tributeForSummon debug\" />\r\n    <MESSAGE value=\"Full spell and trap zone\" />\r\n    <MESSAGE value=\"continuous spell card\" />\r\n    <MESSAGE value=\"suijin debug 1\" />\r\n    <MESSAGE value=\"suijin debug 2\" />\r\n    <MESSAGE value=\"gate gaurdian debug\" />\r\n    <MESSAGE value=\"activate spell debug 1\" />\r\n    <MESSAGE value=\"AIFullDebug + monster reborn\" />\r\n    <MESSAGE value=\"twin twister + spell absorption\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"twin twister + spell absorption\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"93\" y=\"93\" width=\"1095\" height=\"495\" key=\"#com.intellij.execution.junit2.states.ComparisonFailureState$DiffDialog\" timestamp=\"1624733420279\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"93\" y=\"93\" width=\"1095\" height=\"495\" key=\"#com.intellij.execution.junit2.states.ComparisonFailureState$DiffDialog/0.0.1280.680@0.0.1280.680\" timestamp=\"1624733420279\" />\r\n    <state x=\"446\" y=\"42\" key=\"#com.intellij.ide.util.MemberChooser\" timestamp=\"1624635190568\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"446\" y=\"42\" key=\"#com.intellij.ide.util.MemberChooser/0.0.1280.680@0.0.1280.680\" timestamp=\"1624635190568\" />\r\n    <state x=\"170\" y=\"166\" width=\"942\" height=\"348\" key=\"#com.intellij.structuralsearch.plugin.ui.StructuralSearchDialog\" timestamp=\"1624627910544\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"170\" y=\"166\" width=\"942\" height=\"348\" key=\"#com.intellij.structuralsearch.plugin.ui.StructuralSearchDialog/0.0.1280.680@0.0.1280.680\" timestamp=\"1624627910544\" />\r\n    <state width=\"1237\" height=\"168\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1624739421847\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"168\" key=\"GridCell.Tab.0.bottom/0.0.1280.680@0.0.1280.680\" timestamp=\"1624739421847\" />\r\n    <state width=\"1237\" height=\"168\" key=\"GridCell.Tab.0.center\" timestamp=\"1624739421847\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"168\" key=\"GridCell.Tab.0.center/0.0.1280.680@0.0.1280.680\" timestamp=\"1624739421847\" />\r\n    <state width=\"1237\" height=\"168\" key=\"GridCell.Tab.0.left\" timestamp=\"1624739421847\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"168\" key=\"GridCell.Tab.0.left/0.0.1280.680@0.0.1280.680\" timestamp=\"1624739421847\" />\r\n    <state width=\"1237\" height=\"168\" key=\"GridCell.Tab.0.right\" timestamp=\"1624739421847\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"168\" key=\"GridCell.Tab.0.right/0.0.1280.680@0.0.1280.680\" timestamp=\"1624739421847\" />\r\n    <state width=\"1237\" height=\"204\" key=\"GridCell.Tab.1.bottom\" timestamp=\"1624645265744\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"204\" key=\"GridCell.Tab.1.bottom/0.0.1280.680@0.0.1280.680\" timestamp=\"1624645265744\" />\r\n    <state width=\"1237\" height=\"204\" key=\"GridCell.Tab.1.center\" timestamp=\"1624645265744\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"204\" key=\"GridCell.Tab.1.center/0.0.1280.680@0.0.1280.680\" timestamp=\"1624645265744\" />\r\n    <state width=\"1237\" height=\"204\" key=\"GridCell.Tab.1.left\" timestamp=\"1624645265744\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"204\" key=\"GridCell.Tab.1.left/0.0.1280.680@0.0.1280.680\" timestamp=\"1624645265744\" />\r\n    <state width=\"1237\" height=\"204\" key=\"GridCell.Tab.1.right\" timestamp=\"1624645265744\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"204\" key=\"GridCell.Tab.1.right/0.0.1280.680@0.0.1280.680\" timestamp=\"1624645265744\" />\r\n    <state x=\"121\" y=\"51\" key=\"MergeDialog\" timestamp=\"1624625355990\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"121\" y=\"51\" key=\"MergeDialog/0.0.1280.680@0.0.1280.680\" timestamp=\"1624625355990\" />\r\n    <state x=\"280\" y=\"102\" key=\"MultipleFileMergeDialog\" timestamp=\"1624625366881\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"280\" y=\"102\" key=\"MultipleFileMergeDialog/0.0.1280.680@0.0.1280.680\" timestamp=\"1624625366881\" />\r\n    <state x=\"142\" y=\"0\" key=\"SettingsEditor\" timestamp=\"1624653799626\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"142\" y=\"0\" key=\"SettingsEditor/0.0.1280.680@0.0.1280.680\" timestamp=\"1624653799626\" />\r\n    <state x=\"233\" y=\"74\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1624737731479\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"233\" y=\"74\" key=\"Vcs.Push.Dialog.v2/0.0.1280.680@0.0.1280.680\" timestamp=\"1624737731479\" />\r\n    <state x=\"458\" y=\"255\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1624639103809\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"458\" y=\"255\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1280.680@0.0.1280.680\" timestamp=\"1624639103809\" />\r\n    <state x=\"297\" y=\"151\" key=\"run.anything.popup\" timestamp=\"1624560055229\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"297\" y=\"151\" key=\"run.anything.popup/0.0.1280.680@0.0.1280.680\" timestamp=\"1624560055229\" />\r\n    <state x=\"303\" y=\"1\" width=\"672\" height=\"678\" key=\"search.everywhere.popup\" timestamp=\"1624623432354\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"303\" y=\"1\" width=\"672\" height=\"678\" key=\"search.everywhere.popup/0.0.1280.680@0.0.1280.680\" timestamp=\"1624623432354\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/workspace.xml	(revision b13b9ddcb0710c6ae8e68c37170672d6f9f2f084)
-+++ .idea/workspace.xml	(date 1624740353322)
-@@ -22,13 +22,8 @@
-     <select />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="0b1707ad-3e75-4310-9619-956ec670ae1a" name="Default Changelist" comment="twin twister + spell absorption">
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Main.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/controller/DuelController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/DuelController.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/model/SpellAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/SpellAction.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/model/SpellCard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/SpellCard.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/model/TakeActionCase.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/TakeActionCase.java" afterDir="false" />
-+    <list default="true" id="0b1707ad-3e75-4310-9619-956ec670ae1a" name="Default Changelist" comment="mystical space typhoon&#10;twin twisters">
-+      <change beforePath="$PROJECT_DIR$/src/main/java/test.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/test.java" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -415,7 +410,14 @@
-       <option name="project" value="LOCAL" />
-       <updated>1624737729186</updated>
-     </task>
--    <option name="localTasksCounter" value="37" />
-+    <task id="LOCAL-00037" summary="mystical space typhoon&#10;twin twisters">
-+      <created>1624739906446</created>
-+      <option name="number" value="00037" />
-+      <option name="presentableId" value="LOCAL-00037" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1624739906446</updated>
-+    </task>
-+    <option name="localTasksCounter" value="38" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -434,7 +436,6 @@
-     <option name="oldMeFiltersMigrated" value="true" />
-   </component>
-   <component name="VcsManagerConfiguration">
--    <MESSAGE value="jabejayie cheat money" />
-     <MESSAGE value="draw phase automatic" />
-     <MESSAGE value="debug1" />
-     <MESSAGE value="debug2" />
-@@ -459,7 +460,8 @@
-     <MESSAGE value="activate spell debug 1" />
-     <MESSAGE value="AIFullDebug + monster reborn" />
-     <MESSAGE value="twin twister + spell absorption" />
--    <option name="LAST_COMMIT_MESSAGE" value="twin twister + spell absorption" />
-+    <MESSAGE value="mystical space typhoon&#10;twin twisters" />
-+    <option name="LAST_COMMIT_MESSAGE" value="mystical space typhoon&#10;twin twisters" />
-   </component>
-   <component name="WindowStateProjectService">
-     <state x="93" y="93" width="1095" height="495" key="#com.intellij.execution.junit2.states.ComparisonFailureState$DiffDialog" timestamp="1624733420279">
-@@ -518,10 +520,10 @@
-       <screen x="0" y="0" width="1280" height="680" />
-     </state>
-     <state x="142" y="0" key="SettingsEditor/0.0.1280.680@0.0.1280.680" timestamp="1624653799626" />
--    <state x="233" y="74" key="Vcs.Push.Dialog.v2" timestamp="1624737731479">
-+    <state x="233" y="74" key="Vcs.Push.Dialog.v2" timestamp="1624739914077">
-       <screen x="0" y="0" width="1280" height="680" />
-     </state>
--    <state x="233" y="74" key="Vcs.Push.Dialog.v2/0.0.1280.680@0.0.1280.680" timestamp="1624737731479" />
-+    <state x="233" y="74" key="Vcs.Push.Dialog.v2/0.0.1280.680@0.0.1280.680" timestamp="1624739914077" />
-     <state x="458" y="255" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1624639103809">
-       <screen x="0" y="0" width="1280" height="680" />
-     </state>
Index: Users/q.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>q\r\nq\r\nq\r\n0\r\n91200
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Users/q.txt	(revision be307abe8e476dc0cfa5be86bdea2c34a97d81e3)
+++ Users/q.txt	(date 1625407339662)
@@ -2,4 +2,4 @@
 q
 q
 0
-91200
\ No newline at end of file
+100000
\ No newline at end of file
Index: Users/1.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Users/1.txt	(date 1625406931306)
+++ Users/1.txt	(date 1625406931306)
@@ -0,0 +1,5 @@
+1
+1
+1
+0
+100000
\ No newline at end of file
Index: target/classes/MainMenu.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n<?import javafx.scene.text.Text?>\r\n\r\n<AnchorPane prefHeight=\"600.0\" prefWidth=\"900.0\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"view.MainViewGraphic\">\r\n   <children>\r\n      <ImageView fitHeight=\"600.0\" fitWidth=\"900.0\">\r\n         <image>\r\n            <Image url=\"@13.jpg\" />\r\n         </image>\r\n      </ImageView>\r\n      <Button layoutX=\"443.0\" layoutY=\"140.0\" mnemonicParsing=\"false\" text=\"New Duel\" textFill=\"#c800ff\">\r\n         <font>\r\n            <Font name=\"Agency FB Bold\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <Button layoutX=\"429.0\" layoutY=\"196.0\" mnemonicParsing=\"false\" text=\"Deck Settings\" textFill=\"#c800ff\">\r\n         <font>\r\n            <Font name=\"Agency FB Bold\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <Button layoutX=\"434.0\" layoutY=\"251.0\" text=\"ScoreBoard\" onMouseClicked=\"#showScoreboard\" textFill=\"#c800ff\">\r\n         <font>\r\n            <Font name=\"Agency FB Bold\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <Button layoutX=\"450.0\" layoutY=\"308.0\" mnemonicParsing=\"false\" text=\"Profile\" onMouseClicked=\"#profileMenu\" textFill=\"#c800ff\">\r\n         <font>\r\n            <Font name=\"Agency FB Bold\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <Button layoutX=\"456.0\" layoutY=\"364.0\" mnemonicParsing=\"false\" text=\"Shop\" onMouseClicked=\"#shopMenu\" textFill=\"#c800ff\">\r\n         <font>\r\n            <Font name=\"Agency FB Bold\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <Button layoutX=\"426.0\" layoutY=\"419.0\" mnemonicParsing=\"false\" text=\"Import/Export\" textFill=\"#c800ff\">\r\n         <font>\r\n            <Font name=\"Agency FB Bold\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <Button layoutX=\"451.0\" layoutY=\"471.0\" mnemonicParsing=\"false\" onMouseClicked=\"#logout\" text=\"Logout\" textFill=\"#c800ff\">\r\n         <font>\r\n            <Font name=\"Agency FB Bold\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <Text fill=\"#f6f6f6\" layoutX=\"415.0\" layoutY=\"73.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"MAIN MENU\">\r\n         <font>\r\n            <Font name=\"Agency FB Bold\" size=\"36.0\" />\r\n         </font>\r\n      </Text>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/MainMenu.fxml	(revision be307abe8e476dc0cfa5be86bdea2c34a97d81e3)
+++ target/classes/MainMenu.fxml	(date 1625406877600)
@@ -7,52 +7,53 @@
 <?import javafx.scene.text.Font?>
 <?import javafx.scene.text.Text?>
 
-<AnchorPane prefHeight="600.0" prefWidth="900.0" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="view.MainViewGraphic">
-   <children>
-      <ImageView fitHeight="600.0" fitWidth="900.0">
-         <image>
-            <Image url="@13.jpg" />
-         </image>
-      </ImageView>
-      <Button layoutX="443.0" layoutY="140.0" mnemonicParsing="false" text="New Duel" textFill="#c800ff">
-         <font>
-            <Font name="Agency FB Bold" size="18.0" />
-         </font>
-      </Button>
-      <Button layoutX="429.0" layoutY="196.0" mnemonicParsing="false" text="Deck Settings" textFill="#c800ff">
-         <font>
-            <Font name="Agency FB Bold" size="18.0" />
-         </font>
-      </Button>
-      <Button layoutX="434.0" layoutY="251.0" text="ScoreBoard" onMouseClicked="#showScoreboard" textFill="#c800ff">
-         <font>
-            <Font name="Agency FB Bold" size="18.0" />
-         </font>
-      </Button>
-      <Button layoutX="450.0" layoutY="308.0" mnemonicParsing="false" text="Profile" onMouseClicked="#profileMenu" textFill="#c800ff">
-         <font>
-            <Font name="Agency FB Bold" size="18.0" />
-         </font>
-      </Button>
-      <Button layoutX="456.0" layoutY="364.0" mnemonicParsing="false" text="Shop" onMouseClicked="#shopMenu" textFill="#c800ff">
-         <font>
-            <Font name="Agency FB Bold" size="18.0" />
-         </font>
-      </Button>
-      <Button layoutX="426.0" layoutY="419.0" mnemonicParsing="false" text="Import/Export" textFill="#c800ff">
-         <font>
-            <Font name="Agency FB Bold" size="18.0" />
-         </font>
-      </Button>
-      <Button layoutX="451.0" layoutY="471.0" mnemonicParsing="false" onMouseClicked="#logout" text="Logout" textFill="#c800ff">
-         <font>
-            <Font name="Agency FB Bold" size="18.0" />
-         </font>
-      </Button>
-      <Text fill="#f6f6f6" layoutX="415.0" layoutY="73.0" strokeType="OUTSIDE" strokeWidth="0.0" text="MAIN MENU">
-         <font>
-            <Font name="Agency FB Bold" size="36.0" />
-         </font>
-      </Text>
-   </children>
+<AnchorPane prefHeight="600.0" prefWidth="900.0" xmlns="http://javafx.com/javafx/8.0.171"
+            xmlns:fx="http://javafx.com/fxml/1" fx:controller="view.MainViewGraphic">
+    <ImageView fitHeight="600.0" fitWidth="900.0">
+        <Image url="@13.jpg"/>
+    </ImageView>
+    <Button layoutX="443.0" layoutY="140.0" mnemonicParsing="false" text="New Duel" textFill="#c800ff">
+        <font>
+            <Font name="Agency FB Bold" size="18.0"/>
+        </font>
+    </Button>
+    <Button layoutX="429.0" layoutY="196.0" mnemonicParsing="false" text="Deck Settings" textFill="#c800ff"
+            onAction="#goToDeckMenu">
+        <font>
+            <Font name="Agency FB Bold" size="18.0"/>
+        </font>
+    </Button>
+    <Button layoutX="434.0" layoutY="251.0" text="ScoreBoard" onMouseClicked="#showScoreboard" textFill="#c800ff">
+        <font>
+            <Font name="Agency FB Bold" size="18.0"/>
+        </font>
+    </Button>
+    <Button layoutX="450.0" layoutY="308.0" mnemonicParsing="false" text="Profile" onMouseClicked="#profileMenu"
+            textFill="#c800ff">
+        <font>
+            <Font name="Agency FB Bold" size="18.0"/>
+        </font>
+    </Button>
+    <Button layoutX="456.0" layoutY="364.0" mnemonicParsing="false" text="Shop" onMouseClicked="#shopMenu"
+            textFill="#c800ff">
+        <font>
+            <Font name="Agency FB Bold" size="18.0"/>
+        </font>
+    </Button>
+    <Button layoutX="426.0" layoutY="419.0" mnemonicParsing="false" text="Import/Export" textFill="#c800ff">
+        <font>
+            <Font name="Agency FB Bold" size="18.0"/>
+        </font>
+    </Button>
+    <Button layoutX="451.0" layoutY="471.0" mnemonicParsing="false" onMouseClicked="#logout" text="Logout"
+            textFill="#c800ff">
+        <font>
+            <Font name="Agency FB Bold" size="18.0"/>
+        </font>
+    </Button>
+    <Text fill="#f6f6f6" layoutX="415.0" layoutY="73.0" strokeType="OUTSIDE" strokeWidth="0.0" text="MAIN MENU">
+        <font>
+            <Font name="Agency FB Bold" size="36.0"/>
+        </font>
+    </Text>
 </AnchorPane>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0b1707ad-3e75-4310-9619-956ec670ae1a\" name=\"Default Changelist\" comment=\"ShopGraphic6\">\r\n      <change afterPath=\"$PROJECT_DIR$/Users/1.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/all2.zip\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src.zip\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/view/AllDecksViewGraphic.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/view/DeckViewGraphic.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/view/ShowAllDecksGraphic.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/AllDecksMenu.fxml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/DeckView.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM_[Default_Changelist]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM__Default_Changelist_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Users/q.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Users/q.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allUsers.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/allUsers.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controller/MainControllerGraphic.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controller/MainControllerGraphic.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/view/MainViewGraphic.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/view/MainViewGraphic.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/AlexandriteDragon.jpg\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/MainMenu.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/MainMenu.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeStyleSettingsInfer\">\r\n    <option name=\"done\" value=\"true\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectCodeStyleSettingsMigration\">\r\n    <option name=\"version\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1tf7blqKJ2Y0dLvEX2lrUssvKzj\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"restartRequiresConfirmation\" value=\"false\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settings.project.statistic.project.settings\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"controller.exeption\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.SignUpViewGraphic\">\r\n    <configuration name=\"AllDecksViewGraphic\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"view.AllDecksViewGraphic\" />\r\n      <module name=\"project_team_17\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"view.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"1.8\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"project_team_17\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SignUpViewGraphic\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"1.8\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"view.SignUpViewGraphic\" />\r\n      <module name=\"project_team_17\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"view.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"project_team_17\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test.testForMinFinder\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"project_team_17_2\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test\" />\r\n      <option name=\"METHOD_NAME\" value=\"testForMinFinder\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.SignUpViewGraphic\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.AllDecksViewGraphic\" />\r\n        <item itemvalue=\"JUnit.test\" />\r\n        <item itemvalue=\"JUnit.test.testForMinFinder\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"StructuralSearchPlugin\">\r\n    <searchConfiguration name=\"Unnamed\" created=\"1624744011824\" text=\"/* $CommentContent$ */\" recursive=\"false\" caseInsensitive=\"false\" type=\"JAVA\" pattern_context=\"default\" scope_type=\"PROJECT\" scope_descriptor=\"\" history=\"1\">\r\n      <constraint name=\"__context__\" within=\"\" contains=\"\" />\r\n      <constraint name=\"CommentContent\" within=\"\" contains=\"\" />\r\n    </searchConfiguration>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0b1707ad-3e75-4310-9619-956ec670ae1a\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1623148364579</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1623148364579</updated>\r\n      <workItem from=\"1624545878199\" duration=\"3232000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"ScoreBoardViewGraphic.java\">\r\n      <created>1623149665559</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623149665559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"ScoreBoardViewGraphic.java\">\r\n      <created>1623149688409</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623149688409</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Error sign up\">\r\n      <created>1623151044078</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623151044078</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"model.SpellCard.java&#10;Monster Reborn + Terraforming\">\r\n      <created>1623868346229</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623868346229</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"model.SpellCard.java&#10;RAIGEKI + POT_OF_GREED\">\r\n      <created>1623946393997</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623946393997</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Yami SpellCard.java\">\r\n      <created>1624002906129</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624002906129</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Forest &amp; Closed Forest&#10;SpellCard.java\">\r\n      <created>1624012207305</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624012207305</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"debug import user\">\r\n      <created>1624093680512</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624093680512</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"debug import user o baghie import ha\">\r\n      <created>1624099929742</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624099929742</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"kiana test error fix\">\r\n      <created>1624533248061</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624533248061</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"show all cards debug\">\r\n      <created>1624546002241</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624546002241</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"jabejayie cheat money\">\r\n      <created>1624547044985</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624547044985</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"draw phase automatic\">\r\n      <created>1624556390073</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624556390073</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"debug1\">\r\n      <created>1624625286861</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624625286861</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"debug2\">\r\n      <created>1624639165113</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624639165113</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"ai\">\r\n      <created>1624641323564</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624641323564</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"debug attack1\">\r\n      <created>1624643600247</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624643600247</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"debug attack2\">\r\n      <created>1624645817335</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624645817335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"debug attack3\">\r\n      <created>1624646566864</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624646566864</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"debug attack4\">\r\n      <created>1624650239704</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624650239704</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"debug show card\">\r\n      <created>1624653667478</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624653667478</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"debug show card2\">\r\n      <created>1624654145122</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624654145122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"debug takeAction1\">\r\n      <created>1624702088038</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624702088038</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"debug command knight2\">\r\n      <created>1624703733833</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624703733833</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"nothing\">\r\n      <created>1624704514853</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624704514853</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"GATE_GUARDIAN\">\r\n      <created>1624709705904</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624709705904</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"SPELL_ABSORPTION debug1\">\r\n      <created>1624710730390</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624710730390</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"tributeForSummon debug\">\r\n      <created>1624712073940</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624712073940</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Full spell and trap zone\">\r\n      <created>1624713959005</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624713959005</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"continuous spell card\">\r\n      <created>1624715726136</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624715726136</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"suijin debug 1\">\r\n      <created>1624717829951</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624717829951</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"suijin debug 2\">\r\n      <created>1624719651615</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624719651615</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"gate gaurdian debug\">\r\n      <created>1624721450582</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624721450582</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"activate spell debug 1\">\r\n      <created>1624725085666</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624725085666</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"AIFullDebug + monster reborn\">\r\n      <created>1624729177752</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624729177752</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"twin twister + spell absorption\">\r\n      <created>1624737729186</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624737729186</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"mystical space typhoon&#10;twin twisters\">\r\n      <created>1624739906446</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624739906446</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۳۸\" summary=\":|\">\r\n      <created>1625245993391</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۳۸\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۳۸\" />\r\n      <updated>1625245993391</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۳۹\" summary=\"profile and scoreboard edited\">\r\n      <created>1625252163631</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۳۹\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۳۹\" />\r\n      <updated>1625252163631</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"ShopGraphic3\">\r\n      <created>1625304651482</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1625304651482</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"ShopGraphic4\">\r\n      <created>1625313201854</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1625313201854</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"ShopGraphic5\">\r\n      <created>1625323414021</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1625323414021</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00043\" summary=\"ShopGraphic6\">\r\n      <created>1625329659088</created>\r\n      <option name=\"number\" value=\"00043\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1625329659088</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"44\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"ai\" />\r\n    <MESSAGE value=\"debug attack1\" />\r\n    <MESSAGE value=\"debug attack2\" />\r\n    <MESSAGE value=\"debug attack3\" />\r\n    <MESSAGE value=\"debug attack4\" />\r\n    <MESSAGE value=\"debug show card\" />\r\n    <MESSAGE value=\"debug show card2\" />\r\n    <MESSAGE value=\"debug takeAction1\" />\r\n    <MESSAGE value=\"debug command knight2\" />\r\n    <MESSAGE value=\"nothing\" />\r\n    <MESSAGE value=\"GATE_GUARDIAN\" />\r\n    <MESSAGE value=\"SPELL_ABSORPTION debug1\" />\r\n    <MESSAGE value=\"tributeForSummon debug\" />\r\n    <MESSAGE value=\"Full spell and trap zone\" />\r\n    <MESSAGE value=\"continuous spell card\" />\r\n    <MESSAGE value=\"suijin debug 1\" />\r\n    <MESSAGE value=\"suijin debug 2\" />\r\n    <MESSAGE value=\"gate gaurdian debug\" />\r\n    <MESSAGE value=\"activate spell debug 1\" />\r\n    <MESSAGE value=\"AIFullDebug + monster reborn\" />\r\n    <MESSAGE value=\"twin twister + spell absorption\" />\r\n    <MESSAGE value=\"mystical space typhoon&#10;twin twisters\" />\r\n    <MESSAGE value=\":|\" />\r\n    <MESSAGE value=\"profile and scoreboard edited\" />\r\n    <MESSAGE value=\"ShopGraphic3\" />\r\n    <MESSAGE value=\"ShopGraphic4\" />\r\n    <MESSAGE value=\"ShopGraphic5\" />\r\n    <MESSAGE value=\"ShopGraphic6\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"ShopGraphic6\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"446\" y=\"47\" key=\"#com.intellij.ide.util.MemberChooser\" timestamp=\"1625391008495\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"446\" y=\"47\" key=\"#com.intellij.ide.util.MemberChooser/0.0.1280.680@0.0.1280.680\" timestamp=\"1625391008495\" />\r\n    <state width=\"1237\" height=\"157\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1625406967046\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"157\" key=\"GridCell.Tab.0.bottom/0.0.1280.680@0.0.1280.680\" timestamp=\"1625406967046\" />\r\n    <state width=\"1237\" height=\"157\" key=\"GridCell.Tab.0.center\" timestamp=\"1625406967046\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"157\" key=\"GridCell.Tab.0.center/0.0.1280.680@0.0.1280.680\" timestamp=\"1625406967046\" />\r\n    <state width=\"1237\" height=\"157\" key=\"GridCell.Tab.0.left\" timestamp=\"1625406967046\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"157\" key=\"GridCell.Tab.0.left/0.0.1280.680@0.0.1280.680\" timestamp=\"1625406967046\" />\r\n    <state width=\"1237\" height=\"157\" key=\"GridCell.Tab.0.right\" timestamp=\"1625406967046\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state width=\"1237\" height=\"157\" key=\"GridCell.Tab.0.right/0.0.1280.680@0.0.1280.680\" timestamp=\"1625406967046\" />\r\n    <state x=\"121\" y=\"0\" key=\"SettingsEditor\" timestamp=\"1625298369486\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"121\" y=\"0\" key=\"SettingsEditor/0.0.1280.680@0.0.1280.680\" timestamp=\"1625298369486\" />\r\n    <state x=\"233\" y=\"74\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1625329662626\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"233\" y=\"74\" key=\"Vcs.Push.Dialog.v2/0.0.1280.680@0.0.1280.680\" timestamp=\"1625329662626\" />\r\n    <state x=\"303\" y=\"1\" width=\"672\" height=\"678\" key=\"search.everywhere.popup\" timestamp=\"1625340378374\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"303\" y=\"1\" width=\"672\" height=\"678\" key=\"search.everywhere.popup/0.0.1280.680@0.0.1280.680\" timestamp=\"1625340378374\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision be307abe8e476dc0cfa5be86bdea2c34a97d81e3)
+++ .idea/workspace.xml	(date 1625407302538)
@@ -22,9 +22,10 @@
     <select />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0b1707ad-3e75-4310-9619-956ec670ae1a" name="Default Changelist" comment="ShopGraphic6">
+    <list default="true" id="0b1707ad-3e75-4310-9619-956ec670ae1a" name="Default Changelist" comment="AllDecksView">
       <change afterPath="$PROJECT_DIR$/Users/1.txt" afterDir="false" />
       <change afterPath="$PROJECT_DIR$/all2.zip" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src (2).zip" afterDir="false" />
       <change afterPath="$PROJECT_DIR$/src.zip" afterDir="false" />
       <change afterPath="$PROJECT_DIR$/src/main/java/view/AllDecksViewGraphic.java" afterDir="false" />
       <change afterPath="$PROJECT_DIR$/src/main/java/view/DeckViewGraphic.java" afterDir="false" />
@@ -35,7 +36,6 @@
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2021_1_18_AM__Default_Changelist_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Users/q.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Users/q.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/allUsers.txt" beforeDir="false" afterPath="$PROJECT_DIR$/allUsers.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/controller/MainControllerGraphic.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/MainControllerGraphic.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/view/MainViewGraphic.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/view/MainViewGraphic.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/AlexandriteDragon.jpg" beforeDir="false" />
@@ -472,7 +472,14 @@
       <option name="project" value="LOCAL" />
       <updated>1625329659088</updated>
     </task>
-    <option name="localTasksCounter" value="44" />
+    <task id="LOCAL-00044" summary="AllDecksView">
+      <created>1625407190405</created>
+      <option name="number" value="00044" />
+      <option name="presentableId" value="LOCAL-00044" />
+      <option name="project" value="LOCAL" />
+      <updated>1625407190405</updated>
+    </task>
+    <option name="localTasksCounter" value="45" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -492,10 +499,6 @@
   </component>
   <component name="VcsManagerConfiguration">
     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
-    <MESSAGE value="ai" />
-    <MESSAGE value="debug attack1" />
-    <MESSAGE value="debug attack2" />
-    <MESSAGE value="debug attack3" />
     <MESSAGE value="debug attack4" />
     <MESSAGE value="debug show card" />
     <MESSAGE value="debug show card2" />
@@ -520,37 +523,38 @@
     <MESSAGE value="ShopGraphic4" />
     <MESSAGE value="ShopGraphic5" />
     <MESSAGE value="ShopGraphic6" />
-    <option name="LAST_COMMIT_MESSAGE" value="ShopGraphic6" />
+    <MESSAGE value="AllDecksView" />
+    <option name="LAST_COMMIT_MESSAGE" value="AllDecksView" />
   </component>
   <component name="WindowStateProjectService">
     <state x="446" y="47" key="#com.intellij.ide.util.MemberChooser" timestamp="1625391008495">
       <screen x="0" y="0" width="1280" height="680" />
     </state>
     <state x="446" y="47" key="#com.intellij.ide.util.MemberChooser/0.0.1280.680@0.0.1280.680" timestamp="1625391008495" />
-    <state width="1237" height="157" key="GridCell.Tab.0.bottom" timestamp="1625406967046">
+    <state width="1237" height="157" key="GridCell.Tab.0.bottom" timestamp="1625407300356">
       <screen x="0" y="0" width="1280" height="680" />
     </state>
-    <state width="1237" height="157" key="GridCell.Tab.0.bottom/0.0.1280.680@0.0.1280.680" timestamp="1625406967046" />
-    <state width="1237" height="157" key="GridCell.Tab.0.center" timestamp="1625406967046">
+    <state width="1237" height="157" key="GridCell.Tab.0.bottom/0.0.1280.680@0.0.1280.680" timestamp="1625407300356" />
+    <state width="1237" height="157" key="GridCell.Tab.0.center" timestamp="1625407300355">
       <screen x="0" y="0" width="1280" height="680" />
     </state>
-    <state width="1237" height="157" key="GridCell.Tab.0.center/0.0.1280.680@0.0.1280.680" timestamp="1625406967046" />
-    <state width="1237" height="157" key="GridCell.Tab.0.left" timestamp="1625406967046">
+    <state width="1237" height="157" key="GridCell.Tab.0.center/0.0.1280.680@0.0.1280.680" timestamp="1625407300355" />
+    <state width="1237" height="157" key="GridCell.Tab.0.left" timestamp="1625407300355">
       <screen x="0" y="0" width="1280" height="680" />
     </state>
-    <state width="1237" height="157" key="GridCell.Tab.0.left/0.0.1280.680@0.0.1280.680" timestamp="1625406967046" />
-    <state width="1237" height="157" key="GridCell.Tab.0.right" timestamp="1625406967046">
+    <state width="1237" height="157" key="GridCell.Tab.0.left/0.0.1280.680@0.0.1280.680" timestamp="1625407300355" />
+    <state width="1237" height="157" key="GridCell.Tab.0.right" timestamp="1625407300355">
       <screen x="0" y="0" width="1280" height="680" />
     </state>
-    <state width="1237" height="157" key="GridCell.Tab.0.right/0.0.1280.680@0.0.1280.680" timestamp="1625406967046" />
+    <state width="1237" height="157" key="GridCell.Tab.0.right/0.0.1280.680@0.0.1280.680" timestamp="1625407300355" />
     <state x="121" y="0" key="SettingsEditor" timestamp="1625298369486">
       <screen x="0" y="0" width="1280" height="680" />
     </state>
     <state x="121" y="0" key="SettingsEditor/0.0.1280.680@0.0.1280.680" timestamp="1625298369486" />
-    <state x="233" y="74" key="Vcs.Push.Dialog.v2" timestamp="1625329662626">
+    <state x="233" y="74" key="Vcs.Push.Dialog.v2" timestamp="1625407195859">
       <screen x="0" y="0" width="1280" height="680" />
     </state>
-    <state x="233" y="74" key="Vcs.Push.Dialog.v2/0.0.1280.680@0.0.1280.680" timestamp="1625329662626" />
+    <state x="233" y="74" key="Vcs.Push.Dialog.v2/0.0.1280.680@0.0.1280.680" timestamp="1625407195859" />
     <state x="303" y="1" width="672" height="678" key="search.everywhere.popup" timestamp="1625340378374">
       <screen x="0" y="0" width="1280" height="680" />
     </state>
