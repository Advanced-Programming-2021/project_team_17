Index: src/main/java/view/AddCardToDeckView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\r\n\r\nimport controller.DeckController;\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ButtonType;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.stage.Stage;\r\nimport model.Card;\r\nimport model.Deck;\r\nimport model.User;\r\n\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\n\r\npublic class AddCardToDeckView extends Application  {\r\n\r\n    private static Stage stage;\r\n    private static Deck deck;\r\n    private static AddCardToDeckView instance = null;\r\n    private static User user;\r\n    private static ArrayList<Image> images = new ArrayList<>(4);\r\n    private static Card card1, card2, card3, card4;\r\n    public static ImageView image1, image2, image3, image4;\r\n    private static int totalCardsNumber;\r\n    private static int firstCardNumber = 0;\r\n    private static AnchorPane root;\r\n    @FXML\r\n    private Label money, youHave1, youHave2, youHave3, youHave4;\r\n    @FXML\r\n    private Button addButton1Main, addButton2Main, addButton3Main, addButton4Main;\r\n\r\n\r\n\r\n    public static AddCardToDeckView getInstance() {\r\n        if (instance == null) instance = new AddCardToDeckView();\r\n        return instance;\r\n    }\r\n\r\n    public void setCurrentUser(User user) {\r\n        AddCardToDeckView.user = user;\r\n    }\r\n\r\n    public void setCurrentDeck(Deck deck) {\r\n        AddCardToDeckView.deck = deck;\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        DeckController.getInstance(user).setUsersCards(deck);\r\n        AddCardToDeckView.stage = stage;\r\n        URL url = getClass().getResource(\"/CreateNewDeck.fxml\");\r\n        root = FXMLLoader.load(url);\r\n        setImagesAndCards();\r\n        addImages();\r\n        Scene scene = new Scene(root);\r\n        stage.setScene(scene);\r\n    }\r\n\r\n    public void addToMainDeck1() {\r\n        addCardToDeck(card1,false);\r\n    }\r\n\r\n    public void addToMainDeck2() {\r\n        addCardToDeck(card2,false);\r\n    }\r\n\r\n    public void addToMainDeck3() {\r\n        addCardToDeck(card3,false);\r\n    }\r\n\r\n    public void addToMainDeck4() {\r\n        addCardToDeck(card4,false);\r\n    }\r\n\r\n    public void addToSideDeck1() {\r\n        addCardToDeck(card1,true);\r\n    }\r\n\r\n    public void addToSideDeck2() {\r\n        addCardToDeck(card2,true);\r\n    }\r\n\r\n    public void addToSideDeck3() {\r\n        addCardToDeck(card3,true);\r\n    }\r\n\r\n    public void addToSideDeck4() {\r\n        addCardToDeck(card4,true);\r\n    }\r\n\r\n\r\n//    public void buy2() {\r\n//        user.getAllCards().add(card2);\r\n//        //setAll();\r\n//        printText(\"Card added successfully\");\r\n//    }\r\n//\r\n//    public void buy3() {\r\n//        user.getAllCards().add(card3);\r\n//        //setAll();\r\n//        printText(\"Card added successfully\");\r\n//    }\r\n//\r\n//    public void buy4() {\r\n//        user.getAllCards().add(card4);\r\n//        //setAll();\r\n//        printText(\"Card added successfully\");\r\n//    }\r\n\r\n    public void addCardToDeck(Card card, boolean isSide){\r\n        if (deck.getCountOfCardInDeck(card) > 2) {\r\n            printText(\"you already have 3 cards of this type in this deck\"); //todo exception kon\r\n        } else {\r\n            if (isSide) {\r\n                user.getAllCards().remove(card);\r\n                deck.addCardToSideDeck(card);\r\n                printText(\"Card added to side deck successfully\");\r\n            } else {\r\n                user.getAllCards().remove(card);\r\n                deck.addCardToMainDeck(card);\r\n                printText(\"Card added to main deck successfully\");\r\n            }\r\n            setOnlyImagesAndCards();\r\n        }\r\n    }\r\n\r\n\r\n    public void goNextPage() {\r\n        if (firstCardNumber + 4 >= totalCardsNumber) return;\r\n        firstCardNumber += 4;\r\n        setOnlyImagesAndCards();\r\n        //setInStocks();\r\n    }\r\n\r\n    public void goPreviousPage() {\r\n        if (firstCardNumber - 4 < 0) return;\r\n        firstCardNumber -= 4;\r\n        setOnlyImagesAndCards();\r\n        //setInStocks();\r\n    }\r\n\r\n    private void setImagesAndCards() {\r\n        images = DeckController.getInstance(user).getImages(firstCardNumber); //todo\r\n        if (images.size()>0) {\r\n            image1 = setImageView(images.get(0), 83);\r\n            card1 = DeckController.getInstance(user).getCards(firstCardNumber).get(0);\r\n        }\r\n        if (images.size()>1) {\r\n            image2 = setImageView(images.get(1), 283);\r\n            card2 = DeckController.getInstance(user).getCards(firstCardNumber).get(1);\r\n        }\r\n        if (images.size()>2) {\r\n            image3 = setImageView(images.get(2), 483);\r\n            card3 = DeckController.getInstance(user).getCards(firstCardNumber).get(2);\r\n        }\r\n        if (images.size()>3) {\r\n            image4 = setImageView(images.get(3), 683);\r\n            card4 = DeckController.getInstance(user).getCards(firstCardNumber).get(3);\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    private ImageView setImageView(Image image, int x) {\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitWidth(140);\r\n        imageView.setFitHeight(204);\r\n        imageView.setX(x);\r\n        imageView.setY(64);\r\n        return imageView;\r\n    }\r\n\r\n    private void setOnlyImagesAndCards() {\r\n        images = DeckController.getInstance(user).getImages(firstCardNumber);\r\n        removeImages();\r\n        image1.setImage(images.get(0));\r\n        image2.setImage(images.get(1));\r\n        image3.setImage(images.get(2));\r\n        image4.setImage(images.get(3));\r\n        addImages();\r\n        card1 = DeckController.getInstance(user).getCards(firstCardNumber).get(0);\r\n        card2 = DeckController.getInstance(user).getCards(firstCardNumber).get(1);\r\n        card3 = DeckController.getInstance(user).getCards(firstCardNumber).get(2);\r\n        card4 = DeckController.getInstance(user).getCards(firstCardNumber).get(3);\r\n    }\r\n\r\n    private void removeImages() {\r\n        root.getChildren().remove(image1);\r\n        root.getChildren().remove(image2);\r\n        root.getChildren().remove(image3);\r\n        root.getChildren().remove(image4);\r\n    }\r\n\r\n    private void addImages() {\r\n        if (image1 != null) root.getChildren().add(image1);\r\n        if (image2 != null) root.getChildren().add(image2);\r\n        if (image3 != null) root.getChildren().add(image3);\r\n        if (image4 != null) root.getChildren().add(image4);\r\n    }\r\n\r\n    public void printText(String output) {\r\n        Alert alert = new Alert(Alert.AlertType.INFORMATION, output, ButtonType.OK);\r\n        alert.setHeaderText(\"\");\r\n        alert.setTitle(\"\");\r\n        alert.showAndWait();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/view/AddCardToDeckView.java	(revision dddfa46bbf81e04f4b12de9c10f0a1525bdc8e9b)
+++ src/main/java/view/AddCardToDeckView.java	(date 1625424455725)
@@ -2,13 +2,11 @@
 
 import controller.DeckController;
 import javafx.application.Application;
-import javafx.fxml.FXML;
 import javafx.fxml.FXMLLoader;
+import javafx.fxml.Initializable;
 import javafx.scene.Scene;
 import javafx.scene.control.Alert;
-import javafx.scene.control.Button;
 import javafx.scene.control.ButtonType;
-import javafx.scene.control.Label;
 import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
 import javafx.scene.layout.AnchorPane;
@@ -19,11 +17,12 @@
 
 import java.net.URL;
 import java.util.ArrayList;
+import java.util.ResourceBundle;
 
-public class AddCardToDeckView extends Application  {
+public class AddCardToDeckView extends Application  implements Initializable {
 
-    private static Stage stage;
     private static Deck deck;
+    private static Stage stage;
     private static AddCardToDeckView instance = null;
     private static User user;
     private static ArrayList<Image> images = new ArrayList<>(4);
@@ -32,10 +31,12 @@
     private static int totalCardsNumber;
     private static int firstCardNumber = 0;
     private static AnchorPane root;
-    @FXML
+    private final static ArrayList<Image> allImages = new ArrayList<>();
+    private static ArrayList<Card> allCards = new ArrayList<>();
+    /*@FXML
     private Label money, youHave1, youHave2, youHave3, youHave4;
     @FXML
-    private Button addButton1Main, addButton2Main, addButton3Main, addButton4Main;
+    private Button addButton1Main, addButton2Main, addButton3Main, addButton4Main;*/
 
 
 
@@ -54,7 +55,7 @@
 
     @Override
     public void start(Stage stage) throws Exception {
-        DeckController.getInstance(user).setUsersCards(deck);
+        DeckController.getInstance(user).setUsersCards();
         AddCardToDeckView.stage = stage;
         URL url = getClass().getResource("/CreateNewDeck.fxml");
         root = FXMLLoader.load(url);
@@ -64,56 +65,7 @@
         stage.setScene(scene);
     }
 
-    public void addToMainDeck1() {
-        addCardToDeck(card1,false);
-    }
-
-    public void addToMainDeck2() {
-        addCardToDeck(card2,false);
-    }
-
-    public void addToMainDeck3() {
-        addCardToDeck(card3,false);
-    }
-
-    public void addToMainDeck4() {
-        addCardToDeck(card4,false);
-    }
-
-    public void addToSideDeck1() {
-        addCardToDeck(card1,true);
-    }
-
-    public void addToSideDeck2() {
-        addCardToDeck(card2,true);
-    }
-
-    public void addToSideDeck3() {
-        addCardToDeck(card3,true);
-    }
-
-    public void addToSideDeck4() {
-        addCardToDeck(card4,true);
-    }
 
-
-//    public void buy2() {
-//        user.getAllCards().add(card2);
-//        //setAll();
-//        printText("Card added successfully");
-//    }
-//
-//    public void buy3() {
-//        user.getAllCards().add(card3);
-//        //setAll();
-//        printText("Card added successfully");
-//    }
-//
-//    public void buy4() {
-//        user.getAllCards().add(card4);
-//        //setAll();
-//        printText("Card added successfully");
-//    }
 
     public void addCardToDeck(Card card, boolean isSide){
         if (deck.getCountOfCardInDeck(card) > 2) {
@@ -128,7 +80,7 @@
                 deck.addCardToMainDeck(card);
                 printText("Card added to main deck successfully");
             }
-            setOnlyImagesAndCards();
+            resetImagesAndCards();
         }
     }
 
@@ -136,19 +88,20 @@
     public void goNextPage() {
         if (firstCardNumber + 4 >= totalCardsNumber) return;
         firstCardNumber += 4;
-        setOnlyImagesAndCards();
-        //setInStocks();
+        resetImagesAndCards();
     }
 
     public void goPreviousPage() {
         if (firstCardNumber - 4 < 0) return;
         firstCardNumber -= 4;
-        setOnlyImagesAndCards();
-        //setInStocks();
+        resetImagesAndCards();
     }
 
     private void setImagesAndCards() {
-        images = DeckController.getInstance(user).getImages(firstCardNumber); //todo
+        images = DeckController.getInstance(user).getImages(firstCardNumber);
+        System.out.println(user.getAllCards() + "\tuser");
+        System.out.println(images + "\timages");
+        /*//todo
         if (images.size()>0) {
             image1 = setImageView(images.get(0), 83);
             card1 = DeckController.getInstance(user).getCards(firstCardNumber).get(0);
@@ -165,10 +118,16 @@
             image4 = setImageView(images.get(3), 683);
             card4 = DeckController.getInstance(user).getCards(firstCardNumber).get(3);
         }
-
-
-
-
+        addImages();*/
+        if (images.size()>0) image1.setImage(images.get(0));
+        if (images.size()>1) image2.setImage(images.get(1));
+        if (images.size()>2) image3.setImage(images.get(2));
+        if (images.size()>3) image4.setImage(images.get(3));
+        addImages();
+        if (images.size()>0) card1 = DeckController.getInstance(user).getCards(firstCardNumber).get(0);
+        if (images.size()>1) card2 = DeckController.getInstance(user).getCards(firstCardNumber).get(1);
+        if (images.size()>2) card3 = DeckController.getInstance(user).getCards(firstCardNumber).get(2);
+        if (images.size()>3) card4 = DeckController.getInstance(user).getCards(firstCardNumber).get(3);
     }
 
     private ImageView setImageView(Image image, int x) {
@@ -180,18 +139,20 @@
         return imageView;
     }
 
-    private void setOnlyImagesAndCards() {
+    private void resetImagesAndCards() {
         images = DeckController.getInstance(user).getImages(firstCardNumber);
+        System.out.println(user.getAllCards() + "\tuser");
+        System.out.println(images + "\timages");
         removeImages();
-        image1.setImage(images.get(0));
-        image2.setImage(images.get(1));
-        image3.setImage(images.get(2));
-        image4.setImage(images.get(3));
+        if (images.size()>0) image1.setImage(images.get(0));
+        if (images.size()>1) image2.setImage(images.get(1));
+        if (images.size()>2) image3.setImage(images.get(2));
+        if (images.size()>3) image4.setImage(images.get(3));
         addImages();
-        card1 = DeckController.getInstance(user).getCards(firstCardNumber).get(0);
-        card2 = DeckController.getInstance(user).getCards(firstCardNumber).get(1);
-        card3 = DeckController.getInstance(user).getCards(firstCardNumber).get(2);
-        card4 = DeckController.getInstance(user).getCards(firstCardNumber).get(3);
+        if (images.size()>0) card1 = DeckController.getInstance(user).getCards(firstCardNumber).get(0);
+        if (images.size()>1) card2 = DeckController.getInstance(user).getCards(firstCardNumber).get(1);
+        if (images.size()>2) card3 = DeckController.getInstance(user).getCards(firstCardNumber).get(2);
+        if (images.size()>3) card4 = DeckController.getInstance(user).getCards(firstCardNumber).get(3);
     }
 
     private void removeImages() {
@@ -215,4 +176,40 @@
         alert.showAndWait();
     }
 
+    @Override
+    public void initialize(URL location, ResourceBundle resources) {
+        setImagesAndCards();
+    }
+
+    public void addToMainDeck1() {
+        addCardToDeck(card1,false);
+    }
+
+    public void addToMainDeck2() {
+        addCardToDeck(card2,false);
+    }
+
+    public void addToMainDeck3() {
+        addCardToDeck(card3,false);
+    }
+
+    public void addToMainDeck4() {
+        addCardToDeck(card4,false);
+    }
+
+    public void addToSideDeck1() {
+        addCardToDeck(card1,true);
+    }
+
+    public void addToSideDeck2() {
+        addCardToDeck(card2,true);
+    }
+
+    public void addToSideDeck3() {
+        addCardToDeck(card3,true);
+    }
+
+    public void addToSideDeck4() {
+        addCardToDeck(card4,true);
+    }
 }
Index: src/main/java/controller/DeckController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport controller.exeption.*;\r\nimport javafx.scene.image.Image;\r\nimport model.*;\r\nimport view.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.List;\r\nimport java.util.concurrent.ThreadLocalRandom;\r\n\r\npublic class DeckController {\r\n    private static DeckController instance = null;\r\n    private static User user;\r\n\r\n    private final static ArrayList<Image> allImages = new ArrayList<>();\r\n    private static ArrayList<Card> allCards = new ArrayList<>();\r\n\r\n    private DeckController(User user) {\r\n        DeckController.user = user;\r\n        initImages();\r\n    }\r\n\r\n    public static DeckController getInstance(User user) {\r\n        if (instance == null) instance = new DeckController(user);\r\n        else if (DeckController.user == null) DeckController.user = user;\r\n        else if (!DeckController.user.equals(user)) instance.user = user;\r\n        return instance;\r\n    }\r\n\r\n    public List<Card> getAllCardsOfGame() {\r\n        List<Card> allCards = new ArrayList<>();\r\n        Collections.addAll(allCards, MonsterCard.values());\r\n        Collections.addAll(allCards, TrapCard.values());\r\n        Collections.addAll(allCards, SpellCard.values());\r\n        Comparator<Card> cardComparator = Comparator.comparing(Card::getName);\r\n        allCards.sort(cardComparator);\r\n        return allCards;\r\n    }\r\n\r\n    public Card getCardByName(String name) {\r\n        List<Card> allCards = getAllCardsOfGame();\r\n        for (Card card : allCards) {\r\n            if (card.getNamePascalCase().equals(name))\r\n                return card;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void createDeck(String name) throws Exception {\r\n        if (this.user.getDeckByName(name) == null) {\r\n            Deck deck = new Deck(name);\r\n            this.user.addDeck(deck);\r\n            ImportExportUserController importExportUserController = ImportExportUserController.getInstance();\r\n            importExportUserController.exportAllDecksName(this.user.getAllDecks(),this.user);\r\n            DeckView.getInstance(this.user).printText(\"deck created successfully!\");\r\n        } else {\r\n            throw new RepetitiveDeckName(name);\r\n        }\r\n    }\r\n\r\n    public Deck createRandomDeckForAI() {\r\n        Deck deck = new Deck(\"DeckForAI\");\r\n        this.user.addDeck(deck);\r\n        List<Card> allCards = new ArrayList<>();\r\n        Collections.addAll(allCards, MonsterCard.values());\r\n        Collections.addAll(allCards, SpellCard.values());\r\n        Collections.addAll(allCards, TrapCard.values());\r\n        while (user.getDeckByName(\"DeckForAI\").getMainSize() < 46) {\r\n            int randomNum = ThreadLocalRandom.current().nextInt(0, allCards.size());\r\n            try {\r\n                addCardToDeckAI(allCards.get(randomNum), \"DeckForAI\", false, false);\r\n            } catch (Exception exception) {\r\n            }\r\n        }\r\n        return deck;\r\n    }\r\n\r\n    public void deleteDeck(String name) throws Exception {\r\n        if (this.user.getDeckByName(name) != null) {\r\n            this.user.deleteDeck(name);\r\n            ImportExportUserController importExportUserController = ImportExportUserController.getInstance();\r\n            importExportUserController.exportAllDecksName(this.user.getAllDecks(),this.user);\r\n            DeckView.getInstance(this.user).printText(\"deck deleted successfully\");\r\n        } else\r\n            throw new DeckNotFound(name);\r\n    }\r\n\r\n    public void addCardToDeck(String cardName, String deckName, boolean isSide, boolean isAddedByCheating) throws Exception {\r\n        Card card = this.user.getCardByName(cardName);\r\n        if (card != null) {\r\n            Deck deck = this.user.getDeckByName(deckName);\r\n            if (deck != null) {\r\n                if (!isAddedByCheating) {\r\n                    if (isSide && deck.getSideSize() >= 15)\r\n                        throw new FullSideDeck();\r\n                    else if (!(isSide) && (deck.getMainSize() >= 60))\r\n                        throw new FullMainDeck();\r\n                }\r\n                if ((card instanceof MonsterCard ||\r\n                        (card instanceof SpellCard && ((SpellCard) card).getStatus().equals(Status.UNLIMITED))\r\n                        || (card instanceof TrapCard && ((TrapCard) card).getStatus().equals(Status.UNLIMITED)))\r\n                        && deck.numberOfWantedCard(card) == 3)\r\n                    throw new ThreeSameCards(cardName, deckName);\r\n                else if (((card instanceof SpellCard && ((SpellCard) card).getStatus().equals(Status.LIMITED))\r\n                        || (card instanceof TrapCard && ((TrapCard) card).getStatus().equals(Status.LIMITED)))\r\n                        && deck.numberOfWantedCard(card) == 1)\r\n                    throw new OneCardForLimited(cardName, deckName);\r\n                else {\r\n                    if (isSide) {\r\n                        deck.addCardToSideDeck(card);\r\n                        ImportExportUserController importExportUserController = ImportExportUserController.getInstance();\r\n                        importExportUserController.exportCardsInSideDeck(this.user,deckName);\r\n                    } else {\r\n                        deck.addCardToMainDeck(card);\r\n                        ImportExportUserController importExportUserController = ImportExportUserController.getInstance();\r\n                        importExportUserController.exportCardsInMainDeck(this.user,deckName);\r\n                    }\r\n                    this.user.deleteCard(cardName);\r\n                    DeckView.getInstance(this.user).printText(\"card added to deck successfully\");\r\n                }\r\n            } else throw new DeckNotFound(deckName);\r\n        } else throw new CardNotFoundInUser(cardName);\r\n    }\r\n\r\n    public void addCardToDeckAI(Card card, String deckName, boolean isSide, boolean isAddedByCheating) throws Exception {\r\n        String cardName = card.getNamePascalCase();\r\n        Deck deck = this.user.getDeckByName(deckName);\r\n        if (deck != null) {\r\n            if (!isAddedByCheating) {\r\n                if (isSide && deck.getSideSize() >= 15)\r\n                    throw new FullSideDeck();\r\n                else if (!(isSide) && (deck.getMainSize() >= 60))\r\n                    throw new FullMainDeck();\r\n            }\r\n            if ((card instanceof MonsterCard ||\r\n                    (card instanceof SpellCard && ((SpellCard) card).getStatus().equals(Status.UNLIMITED))\r\n                    || (card instanceof TrapCard && ((TrapCard) card).getStatus().equals(Status.UNLIMITED)))\r\n                    && deck.numberOfWantedCard(card) == 3)\r\n                throw new ThreeSameCards(cardName, deckName);\r\n            else if (((card instanceof SpellCard && ((SpellCard) card).getStatus().equals(Status.LIMITED))\r\n                    || (card instanceof TrapCard && ((TrapCard) card).getStatus().equals(Status.LIMITED)))\r\n                    && deck.numberOfWantedCard(card) == 1)\r\n                throw new OneCardForLimited(cardName, deckName);\r\n            else {\r\n                if (isSide) {\r\n                    deck.addCardToSideDeck(card);\r\n                        ImportExportUserController importExportUserController = ImportExportUserController.getInstance();\r\n                        importExportUserController.exportCardsInSideDeck(this.user,deckName);\r\n                } else {\r\n                    deck.addCardToMainDeck(card);\r\n                        ImportExportUserController importExportUserController = ImportExportUserController.getInstance();\r\n                        importExportUserController.exportCardsInMainDeck(this.user,deckName);\r\n                }\r\n                this.user.deleteCard(cardName);\r\n            }\r\n        } else throw new DeckNotFound(deckName);\r\n    }\r\n\r\n    public void activateDeck(String name) throws Exception {\r\n        if (this.user.getDeckByName(name) != null) {\r\n            this.user.setActiveDeck(this.user.getDeckByName(name));\r\n            DeckView.getInstance(this.user).printText(\"deck activated successfully\");\r\n        } else\r\n            throw new DeckNotFound(name);\r\n    }\r\n\r\n    public void removeCardFromDeck(String cardName, String deckName, boolean isSide) throws Exception {\r\n        Deck deck = user.getDeckByName(deckName);\r\n        if (deck != null) {\r\n            Card card = DeckController.getInstance(user).getCardByName(cardName);\r\n            if (card != null) {\r\n                if (isSide) {\r\n                    if (deck.cardExistsInDeck(card, true)) {\r\n                        deck.removeCardFromSideDeck(card);\r\n                        this.user.addCardToUsersAllCards(card);\r\n                        ImportExportUserController importExportUserController = ImportExportUserController.getInstance();\r\n                        importExportUserController.exportCardsInSideDeck(this.user,deckName);\r\n                        importExportUserController.exportAllCards(this.user);\r\n                        DeckView.getInstance(user).printText(\"card removed form deck successfully\");\r\n                    } else throw new CardNotFoundInDeck(cardName, \"side\");\r\n                } else {\r\n                    if (deck.cardExistsInDeck(card, false)) {\r\n                        deck.removeCardFromMainDeck(card);\r\n                        this.user.addCardToUsersAllCards(card);\r\n                        ImportExportUserController importExportUserController = ImportExportUserController.getInstance();\r\n                        importExportUserController.exportCardsInMainDeck(this.user,deckName);\r\n                        importExportUserController.exportAllCards(this.user);\r\n                        DeckView.getInstance(user).printText(\"card removed form deck successfully\");\r\n                    } else throw new CardNotFoundInDeck(cardName, \"main\");\r\n                }\r\n            } else\r\n                throw new CardNotFoundForController();\r\n        } else\r\n            throw new DeckNotFound(deckName);\r\n    }\r\n\r\n    public void showAllDecks() {\r\n        StringBuilder toPrint = new StringBuilder(\"Decks:\\nActive deck:\\n\");\r\n        List<Deck> allDecks = new ArrayList<>(this.user.getAllDecks());\r\n        Deck activeDeck = null;\r\n        if (this.user.getActiveDeck() != null) {\r\n            for (Deck deck : allDecks) {\r\n                if (this.user.getActiveDeck().getDeckName().equals(deck.getDeckName())) {\r\n                    toPrint.append(deck.toString());\r\n                    if (deck.isValid()) toPrint.append(\", valid\\n\");\r\n                    else toPrint.append(\", invalid\\n\");\r\n                    activeDeck = deck;\r\n                }\r\n            }\r\n        }\r\n\r\n        toPrint.append(\"Other decks:\\n\");\r\n        allDecks.remove(activeDeck);\r\n        Comparator<Deck> deckComparator = Comparator.comparing(Deck::getDeckName);\r\n        allDecks.sort(deckComparator);\r\n        for (Deck deck : allDecks) {\r\n            toPrint.append(deck.toString());\r\n            if (allDecks.get(allDecks.size() - 1).equals(deck)) {\r\n                if (deck.isValid()) toPrint.append(\", valid\");\r\n                else toPrint.append(\", invalid\");\r\n            } else {\r\n                if (deck.isValid()) toPrint.append(\", valid\\n\");\r\n                else toPrint.append(\", invalid\\n\");\r\n            }\r\n        }\r\n        DeckView.getInstance(this.user).printText(toPrint.toString());\r\n    }\r\n\r\n    public void showDeck(String deckName, boolean isSide) throws Exception {\r\n        if (this.user.getDeckByName(deckName) == null) throw new DeckNotFound(deckName);\r\n        String toPrint = \"Deck: \" + deckName + \"\\n\";\r\n        if (isSide) toPrint += \"Side deck:\\nMonsters:\\n\";\r\n        else toPrint += \"Main deck:\\nMonsters:\\n\";\r\n        ArrayList<Card> monsterCards = new ArrayList<>();\r\n        ArrayList<Card> spellAndTrapCards = new ArrayList<>();\r\n        if (!isSide) {\r\n            for (Card eachCard : this.user.getDeckByName(deckName).getMainDeck()) {\r\n                if (eachCard instanceof MonsterCard) monsterCards.add(eachCard);\r\n                else spellAndTrapCards.add(eachCard);\r\n            }\r\n        } else {\r\n            for (Card eachCard : this.user.getDeckByName(deckName).getSideDeck()) {\r\n                if (eachCard instanceof MonsterCard) monsterCards.add(eachCard);\r\n                else spellAndTrapCards.add(eachCard);\r\n            }\r\n        }\r\n        Comparator<Card> cardComparator = Comparator.comparing(Card::getNamePascalCase);\r\n        monsterCards.sort(cardComparator);\r\n        spellAndTrapCards.sort(cardComparator);\r\n        for (Card eachCard : monsterCards) {\r\n            toPrint += eachCard.getNamePascalCase() + \":\" + eachCard.getDescription() + \"\\n\";\r\n        }\r\n        toPrint += \"Spell and Traps:\";\r\n        for (Card eachCard : spellAndTrapCards) {\r\n            toPrint += \"\\n\" + eachCard.getNamePascalCase() + \":\" + eachCard.getDescription();\r\n        }\r\n        DeckView.getInstance(this.user).printText(toPrint);\r\n    }\r\n\r\n    public void showAllCards() {\r\n        String toPrint = \"\";\r\n        List<Card> allCards = this.user.getAllCards();\r\n        Comparator<Card> cardComparator = Comparator.comparing(Card::getNamePascalCase);\r\n        allCards.sort(cardComparator);\r\n        for (Card card : allCards) {\r\n            toPrint += card.getNamePascalCase() + \":\" + card.getDescription() + \"\\n\";\r\n        }\r\n        DeckView.getInstance(this.user).printText(toPrint);\r\n    }\r\n\r\n\r\n    public void setUsersCards(Deck deck){\r\n        allCards = (ArrayList<Card>) user.getAllCards();\r\n    }\r\n\r\n\r\n    private void initImages() {\r\n        for (Card card : allCards) {\r\n            allImages.add(card.getImage());\r\n        }\r\n    }\r\n\r\n    public ArrayList<Image> getImages(int start){\r\n        ArrayList<Image> myImages = new ArrayList<>(4);\r\n        for (int i = start; i < start+4; i++) {\r\n            if (i<allImages.size()) {\r\n                myImages.add(allImages.get(i));\r\n            }\r\n        }\r\n        return myImages;\r\n    }\r\n\r\n    public ArrayList<Card> getCards(int start){\r\n        ArrayList<Card> cards = new ArrayList<>(4);\r\n        for (int i = start; i < start+4; i++) {\r\n            if (allCards.size()>i) cards.add(allCards.get(i));\r\n        }\r\n        return cards;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/DeckController.java	(revision dddfa46bbf81e04f4b12de9c10f0a1525bdc8e9b)
+++ src/main/java/controller/DeckController.java	(date 1625424455735)
@@ -25,8 +25,10 @@
 
     public static DeckController getInstance(User user) {
         if (instance == null) instance = new DeckController(user);
-        else if (DeckController.user == null) DeckController.user = user;
-        else if (!DeckController.user.equals(user)) instance.user = user;
+        else if (DeckController.user == null || !DeckController.user.equals(user)) {
+            DeckController.user = user;
+            initImages();
+        }
         return instance;
     }
 
@@ -50,12 +52,12 @@
     }
 
     public void createDeck(String name) throws Exception {
-        if (this.user.getDeckByName(name) == null) {
+        if (DeckController.user.getDeckByName(name) == null) {
             Deck deck = new Deck(name);
-            this.user.addDeck(deck);
+            DeckController.user.addDeck(deck);
             ImportExportUserController importExportUserController = ImportExportUserController.getInstance();
-            importExportUserController.exportAllDecksName(this.user.getAllDecks(),this.user);
-            DeckView.getInstance(this.user).printText("deck created successfully!");
+            importExportUserController.exportAllDecksName(DeckController.user.getAllDecks(),DeckController.user);
+            DeckView.getInstance(DeckController.user).printText("deck created successfully!");
         } else {
             throw new RepetitiveDeckName(name);
         }
@@ -63,7 +65,7 @@
 
     public Deck createRandomDeckForAI() {
         Deck deck = new Deck("DeckForAI");
-        this.user.addDeck(deck);
+        DeckController.user.addDeck(deck);
         List<Card> allCards = new ArrayList<>();
         Collections.addAll(allCards, MonsterCard.values());
         Collections.addAll(allCards, SpellCard.values());
@@ -72,26 +74,26 @@
             int randomNum = ThreadLocalRandom.current().nextInt(0, allCards.size());
             try {
                 addCardToDeckAI(allCards.get(randomNum), "DeckForAI", false, false);
-            } catch (Exception exception) {
+            } catch (Exception ignored) {
             }
         }
         return deck;
     }
 
     public void deleteDeck(String name) throws Exception {
-        if (this.user.getDeckByName(name) != null) {
-            this.user.deleteDeck(name);
+        if (DeckController.user.getDeckByName(name) != null) {
+            DeckController.user.deleteDeck(name);
             ImportExportUserController importExportUserController = ImportExportUserController.getInstance();
-            importExportUserController.exportAllDecksName(this.user.getAllDecks(),this.user);
-            DeckView.getInstance(this.user).printText("deck deleted successfully");
+            importExportUserController.exportAllDecksName(DeckController.user.getAllDecks(),DeckController.user);
+            DeckView.getInstance(DeckController.user).printText("deck deleted successfully");
         } else
             throw new DeckNotFound(name);
     }
 
     public void addCardToDeck(String cardName, String deckName, boolean isSide, boolean isAddedByCheating) throws Exception {
-        Card card = this.user.getCardByName(cardName);
+        Card card = DeckController.user.getCardByName(cardName);
         if (card != null) {
-            Deck deck = this.user.getDeckByName(deckName);
+            Deck deck = DeckController.user.getDeckByName(deckName);
             if (deck != null) {
                 if (!isAddedByCheating) {
                     if (isSide && deck.getSideSize() >= 15)
@@ -112,14 +114,14 @@
                     if (isSide) {
                         deck.addCardToSideDeck(card);
                         ImportExportUserController importExportUserController = ImportExportUserController.getInstance();
-                        importExportUserController.exportCardsInSideDeck(this.user,deckName);
+                        importExportUserController.exportCardsInSideDeck(DeckController.user,deckName);
                     } else {
                         deck.addCardToMainDeck(card);
                         ImportExportUserController importExportUserController = ImportExportUserController.getInstance();
-                        importExportUserController.exportCardsInMainDeck(this.user,deckName);
+                        importExportUserController.exportCardsInMainDeck(DeckController.user,deckName);
                     }
-                    this.user.deleteCard(cardName);
-                    DeckView.getInstance(this.user).printText("card added to deck successfully");
+                    DeckController.user.deleteCard(cardName);
+                    DeckView.getInstance(DeckController.user).printText("card added to deck successfully");
                 }
             } else throw new DeckNotFound(deckName);
         } else throw new CardNotFoundInUser(cardName);
@@ -127,7 +129,7 @@
 
     public void addCardToDeckAI(Card card, String deckName, boolean isSide, boolean isAddedByCheating) throws Exception {
         String cardName = card.getNamePascalCase();
-        Deck deck = this.user.getDeckByName(deckName);
+        Deck deck = DeckController.user.getDeckByName(deckName);
         if (deck != null) {
             if (!isAddedByCheating) {
                 if (isSide && deck.getSideSize() >= 15)
@@ -148,21 +150,21 @@
                 if (isSide) {
                     deck.addCardToSideDeck(card);
                         ImportExportUserController importExportUserController = ImportExportUserController.getInstance();
-                        importExportUserController.exportCardsInSideDeck(this.user,deckName);
+                        importExportUserController.exportCardsInSideDeck(DeckController.user,deckName);
                 } else {
                     deck.addCardToMainDeck(card);
                         ImportExportUserController importExportUserController = ImportExportUserController.getInstance();
-                        importExportUserController.exportCardsInMainDeck(this.user,deckName);
+                        importExportUserController.exportCardsInMainDeck(DeckController.user,deckName);
                 }
-                this.user.deleteCard(cardName);
+                DeckController.user.deleteCard(cardName);
             }
         } else throw new DeckNotFound(deckName);
     }
 
     public void activateDeck(String name) throws Exception {
-        if (this.user.getDeckByName(name) != null) {
-            this.user.setActiveDeck(this.user.getDeckByName(name));
-            DeckView.getInstance(this.user).printText("deck activated successfully");
+        if (DeckController.user.getDeckByName(name) != null) {
+            DeckController.user.setActiveDeck(DeckController.user.getDeckByName(name));
+            DeckView.getInstance(DeckController.user).printText("deck activated successfully");
         } else
             throw new DeckNotFound(name);
     }
@@ -175,19 +177,19 @@
                 if (isSide) {
                     if (deck.cardExistsInDeck(card, true)) {
                         deck.removeCardFromSideDeck(card);
-                        this.user.addCardToUsersAllCards(card);
+                        DeckController.user.addCardToUsersAllCards(card);
                         ImportExportUserController importExportUserController = ImportExportUserController.getInstance();
-                        importExportUserController.exportCardsInSideDeck(this.user,deckName);
-                        importExportUserController.exportAllCards(this.user);
+                        importExportUserController.exportCardsInSideDeck(DeckController.user,deckName);
+                        importExportUserController.exportAllCards(DeckController.user);
                         DeckView.getInstance(user).printText("card removed form deck successfully");
                     } else throw new CardNotFoundInDeck(cardName, "side");
                 } else {
                     if (deck.cardExistsInDeck(card, false)) {
                         deck.removeCardFromMainDeck(card);
-                        this.user.addCardToUsersAllCards(card);
+                        DeckController.user.addCardToUsersAllCards(card);
                         ImportExportUserController importExportUserController = ImportExportUserController.getInstance();
-                        importExportUserController.exportCardsInMainDeck(this.user,deckName);
-                        importExportUserController.exportAllCards(this.user);
+                        importExportUserController.exportCardsInMainDeck(DeckController.user,deckName);
+                        importExportUserController.exportAllCards(DeckController.user);
                         DeckView.getInstance(user).printText("card removed form deck successfully");
                     } else throw new CardNotFoundInDeck(cardName, "main");
                 }
@@ -199,11 +201,11 @@
 
     public void showAllDecks() {
         StringBuilder toPrint = new StringBuilder("Decks:\nActive deck:\n");
-        List<Deck> allDecks = new ArrayList<>(this.user.getAllDecks());
+        List<Deck> allDecks = new ArrayList<>(DeckController.user.getAllDecks());
         Deck activeDeck = null;
-        if (this.user.getActiveDeck() != null) {
+        if (DeckController.user.getActiveDeck() != null) {
             for (Deck deck : allDecks) {
-                if (this.user.getActiveDeck().getDeckName().equals(deck.getDeckName())) {
+                if (DeckController.user.getActiveDeck().getDeckName().equals(deck.getDeckName())) {
                     toPrint.append(deck.toString());
                     if (deck.isValid()) toPrint.append(", valid\n");
                     else toPrint.append(", invalid\n");
@@ -226,23 +228,23 @@
                 else toPrint.append(", invalid\n");
             }
         }
-        DeckView.getInstance(this.user).printText(toPrint.toString());
+        DeckView.getInstance(DeckController.user).printText(toPrint.toString());
     }
 
     public void showDeck(String deckName, boolean isSide) throws Exception {
-        if (this.user.getDeckByName(deckName) == null) throw new DeckNotFound(deckName);
-        String toPrint = "Deck: " + deckName + "\n";
-        if (isSide) toPrint += "Side deck:\nMonsters:\n";
-        else toPrint += "Main deck:\nMonsters:\n";
+        if (DeckController.user.getDeckByName(deckName) == null) throw new DeckNotFound(deckName);
+        StringBuilder toPrint = new StringBuilder("Deck: " + deckName + "\n");
+        if (isSide) toPrint.append("Side deck:\nMonsters:\n");
+        else toPrint.append("Main deck:\nMonsters:\n");
         ArrayList<Card> monsterCards = new ArrayList<>();
         ArrayList<Card> spellAndTrapCards = new ArrayList<>();
         if (!isSide) {
-            for (Card eachCard : this.user.getDeckByName(deckName).getMainDeck()) {
+            for (Card eachCard : DeckController.user.getDeckByName(deckName).getMainDeck()) {
                 if (eachCard instanceof MonsterCard) monsterCards.add(eachCard);
                 else spellAndTrapCards.add(eachCard);
             }
         } else {
-            for (Card eachCard : this.user.getDeckByName(deckName).getSideDeck()) {
+            for (Card eachCard : DeckController.user.getDeckByName(deckName).getSideDeck()) {
                 if (eachCard instanceof MonsterCard) monsterCards.add(eachCard);
                 else spellAndTrapCards.add(eachCard);
             }
@@ -251,33 +253,31 @@
         monsterCards.sort(cardComparator);
         spellAndTrapCards.sort(cardComparator);
         for (Card eachCard : monsterCards) {
-            toPrint += eachCard.getNamePascalCase() + ":" + eachCard.getDescription() + "\n";
+            toPrint.append(eachCard.getNamePascalCase()).append(":").append(eachCard.getDescription()).append("\n");
         }
-        toPrint += "Spell and Traps:";
+        toPrint.append("Spell and Traps:");
         for (Card eachCard : spellAndTrapCards) {
-            toPrint += "\n" + eachCard.getNamePascalCase() + ":" + eachCard.getDescription();
+            toPrint.append("\n").append(eachCard.getNamePascalCase()).append(":").append(eachCard.getDescription());
         }
-        DeckView.getInstance(this.user).printText(toPrint);
+        DeckView.getInstance(DeckController.user).printText(toPrint.toString());
     }
 
     public void showAllCards() {
-        String toPrint = "";
-        List<Card> allCards = this.user.getAllCards();
+        StringBuilder toPrint = new StringBuilder();
+        List<Card> allCards = DeckController.user.getAllCards();
         Comparator<Card> cardComparator = Comparator.comparing(Card::getNamePascalCase);
         allCards.sort(cardComparator);
         for (Card card : allCards) {
-            toPrint += card.getNamePascalCase() + ":" + card.getDescription() + "\n";
+            toPrint.append(card.getNamePascalCase()).append(":").append(card.getDescription()).append("\n");
         }
-        DeckView.getInstance(this.user).printText(toPrint);
+        DeckView.getInstance(DeckController.user).printText(toPrint.toString());
     }
 
-
-    public void setUsersCards(Deck deck){
+    public void setUsersCards(){
         allCards = (ArrayList<Card>) user.getAllCards();
     }
 
-
-    private void initImages() {
+    private static void initImages() {
         for (Card card : allCards) {
             allImages.add(card.getImage());
         }
Index: src/main/java/view/AllDecksViewGraphic.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.stage.Stage;\r\nimport model.Deck;\r\nimport model.User;\r\n\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class AllDecksViewGraphic extends Application implements Initializable {\r\n    private static Stage stage;\r\n    private static AllDecksViewGraphic instance = null;\r\n    private static User user /*= new User(\"1\",\"1\",\"1\")*/;\r\n    @FXML\r\n    public TextField deckName;\r\n    @FXML\r\n    private VBox vBox;\r\n    @FXML\r\n    private ScrollPane scrollPane;\r\n    private static ArrayList<AnchorPane> decks = new ArrayList<>();\r\n    private static final ToggleGroup toggleGroup = new ToggleGroup();\r\n\r\n    public static AllDecksViewGraphic getInstance() {\r\n        if (instance == null) instance = new AllDecksViewGraphic();\r\n        return instance;\r\n    }\r\n\r\n    public void setCurrentUser(User user) {\r\n        AllDecksViewGraphic.user = user;\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        /*Deck deck = new Deck(\"hi\");\r\n        user.addDeck(deck);\r\n        user.setActiveDeck(deck);*/\r\n        AllDecksViewGraphic.stage = stage;\r\n        URL url = getClass().getResource(\"/AllDecksMenu.fxml\");\r\n        AnchorPane root = FXMLLoader.load(url);\r\n        Scene scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        ArrayList<Deck> userAllDecks = (ArrayList<Deck>) user.getAllDecks();\r\n        for (Deck deck : userAllDecks) {\r\n            addDeck(deck);\r\n            if (user.getActiveDeck() != null && deck.getDeckName().equals(user.getActiveDeck().getDeckName())) {\r\n                setActiveDeckInitialize(deck);\r\n                System.out.println(\"1\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private void addDeck(Deck deck) {\r\n        AnchorPane anchorPane1 = new AnchorPane();\r\n        RadioButton radioButton = new RadioButton(deck.getDeckName());\r\n        radioButton.setLayoutX(8);\r\n        radioButton.setTextFill(Color.WHITE);\r\n        radioButton.setOnAction(this::setActiveDeck);\r\n        radioButton.setToggleGroup(toggleGroup);\r\n        radioButton.setMaxWidth(180);\r\n        anchorPane1.getChildren().add(radioButton);\r\n        Label label = new Label();\r\n        if (deck.isValid())\r\n            label.setText(\" : Valid\");\r\n        else\r\n            label.setText(\" : Invalid\");\r\n        label.setLayoutX(184);\r\n        label.setTextFill(Color.WHITE);\r\n        anchorPane1.getChildren().add(label);\r\n        Button editButton = new Button(\"Edit Deck\");\r\n//        editButton.setOnMouseClicked(edit());\r\n//        editButton.getOnMouseClicked();\r\n//        editButton.onMouseClickedProperty();\r\n        editButton.setLayoutX(240);\r\n        editButton.setOnAction(this::editDeck);\r\n        anchorPane1.getChildren().add(editButton);\r\n        Button deleteButton = new Button(\"Delete Deck\");\r\n        deleteButton.setCancelButton(true);\r\n        deleteButton.setLayoutX(310);\r\n        deleteButton.setOnAction(this::deleteDeck);\r\n        deleteButton.setStyle(\"-fx-background-color: #ffb3b3;\");\r\n        anchorPane1.getChildren().add(deleteButton);\r\n        vBox.setSpacing(10);\r\n        decks.add(anchorPane1);\r\n        vBox.getChildren().add(anchorPane1);\r\n        scrollPane.setMaxHeight(400);\r\n        vBox.setPrefHeight(36 * decks.size());\r\n        scrollPane.setPrefHeight(36 * decks.size());\r\n    }\r\n\r\n\r\n    public void goBack() throws Exception {\r\n        MainViewGraphic.getInstance().setCurrentUser(user);\r\n        MainViewGraphic.getInstance().start(stage);\r\n    }\r\n\r\n    public void editDeck(ActionEvent actionEvent) {\r\n        for (AnchorPane anchorPane : decks) {\r\n            Button button = (Button) anchorPane.getChildren().get(2);\r\n            if (button.equals(actionEvent.getSource())) {\r\n                RadioButton radioButton = (RadioButton) anchorPane.getChildren().get(0);\r\n                Deck deck = user.getDeckByName(radioButton.getText());\r\n                AddCardToDeckView.getInstance().setCurrentUser(user);\r\n                AddCardToDeckView.getInstance().setCurrentDeck(deck);\r\n                try {\r\n                    AddCardToDeckView.getInstance().start(stage);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                //TODO call edit menu of kiana\r\n            }\r\n        }\r\n    }\r\n\r\n    public void deleteDeck(ActionEvent actionEvent) {\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION, \"Are you sure you want to permanently delete this deck?\");\r\n        alert.setTitle(\"Error\");\r\n        alert.setHeaderText(\"\");\r\n        alert.showAndWait();\r\n        if (alert.getResult().equals(ButtonType.CANCEL))\r\n            return;\r\n        for (int i = 0; i < decks.size(); i++) {\r\n            AnchorPane anchorPane = decks.get(i);\r\n            Button button = (Button) anchorPane.getChildren().get(3);\r\n            if (button.equals(actionEvent.getSource())) {\r\n                RadioButton radioButton = (RadioButton) anchorPane.getChildren().get(0);\r\n                user.deleteDeck(radioButton.getText());\r\n                decks.remove(anchorPane);\r\n                for (int j = 0; j < vBox.getChildren().size(); j++) {\r\n                    AnchorPane anchorPane1 = (AnchorPane) vBox.getChildren().get(j);\r\n                    if (((RadioButton) anchorPane1.getChildren().get(0)).getText().equals(((RadioButton) anchorPane.getChildren().get(0)).getText())) {\r\n                        vBox.getChildren().remove(j);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void setActiveDeck(ActionEvent actionEvent) {\r\n        for (AnchorPane anchorPane : decks) {\r\n            RadioButton radioButton = (RadioButton) anchorPane.getChildren().get(0);\r\n            if (radioButton.equals(actionEvent.getSource())) {\r\n                Deck deck = user.getDeckByName(radioButton.getText());\r\n                user.setActiveDeck(deck);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void setActiveDeckInitialize(Deck deck) {\r\n        for (int i = 0; i < decks.size(); i++) {\r\n            AnchorPane anchorPane = (AnchorPane)vBox.getChildren().get(i);\r\n            RadioButton radioButton = (RadioButton) anchorPane.getChildren().get(0);\r\n            if (radioButton.getText().equals(deck.getDeckName())) {\r\n                toggleGroup.getToggles().get(i).setSelected(true);\r\n                toggleGroup.selectToggle(radioButton);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void createNewDeck() {\r\n        if (user.getDeckByName(deckName.getText()) != null)\r\n            printError(\"deck with name \" + deckName.getText() + \" already exists\");\r\n        else if (deckName.getText().equals(\"\"))\r\n            printError(\"fill in the box\");\r\n        else {\r\n            Deck deck = new Deck(deckName.getText());\r\n            user.addDeck(deck);\r\n            addDeck(deck);\r\n            deckName.clear();\r\n        }\r\n    }\r\n\r\n    public void printError(String text) {\r\n        Alert alert = new Alert(Alert.AlertType.ERROR, text);\r\n        alert.setTitle(\"Error\");\r\n        alert.setHeaderText(\"\");\r\n        alert.showAndWait();\r\n    }\r\n\r\n    public void edit(){\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/view/AllDecksViewGraphic.java	(revision dddfa46bbf81e04f4b12de9c10f0a1525bdc8e9b)
+++ src/main/java/view/AllDecksViewGraphic.java	(date 1625420321444)
@@ -60,7 +60,6 @@
             addDeck(deck);
             if (user.getActiveDeck() != null && deck.getDeckName().equals(user.getActiveDeck().getDeckName())) {
                 setActiveDeckInitialize(deck);
-                System.out.println("1");
             }
         }
     }
Index: allUsers.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- allUsers.txt	(revision dddfa46bbf81e04f4b12de9c10f0a1525bdc8e9b)
+++ allUsers.txt	(date 1625424633039)
@@ -1,1 +1,1 @@
-;
+q
Index: Users/q.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>q\r\nq\r\nq\r\n0\r\n91200
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Users/q.txt	(revision dddfa46bbf81e04f4b12de9c10f0a1525bdc8e9b)
+++ Users/q.txt	(date 1625424637345)
@@ -2,4 +2,4 @@
 q
 q
 0
-91200
\ No newline at end of file
+96900
\ No newline at end of file
Index: src/main/java/model/Deck.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\nimport controller.ImportExportUserController;\r\n\r\nimport java.util.*;\r\n\r\npublic class Deck {\r\n    private String deckName;\r\n    private List<Card> mainDeck;\r\n    private List<Card> sideDeck;\r\n\r\n    public Deck(String deckName) {\r\n        this.deckName = deckName;\r\n        this.mainDeck = new ArrayList<>();\r\n        this.sideDeck = new ArrayList<>();\r\n    }\r\n\r\n    public String getDeckName() {\r\n        return this.deckName;\r\n    }\r\n\r\n    public List<Card> getMainDeck() {\r\n        return this.mainDeck;\r\n    }\r\n\r\n    public List<Card> getSideDeck() {\r\n        return this.sideDeck;\r\n    }\r\n\r\n    public int getSideSize() {\r\n        return this.sideDeck.size();\r\n    }\r\n\r\n    public int getMainSize() {\r\n        return this.mainDeck.size();\r\n    }\r\n\r\n    public void setDeck(ArrayList<Card> mainCards, ArrayList<Card> sideCards) {\r\n        this.mainDeck = mainCards;\r\n        this.sideDeck = sideCards;\r\n    }\r\n\r\n    public int getCountOfCardInDeck(Card card) {\r\n        int counter =0;\r\n        for (Card eachCard : this.sideDeck) {\r\n            if (card.getName().equals(eachCard.getName()))\r\n                counter++;\r\n        }\r\n        for (Card eachCard : this.mainDeck) {\r\n            if (card.getName().equals(eachCard.getName()))\r\n                counter++;\r\n        }\r\n        return counter;\r\n    }\r\n\r\n    public void addCardToMainDeck(Card card) {\r\n        this.mainDeck.add(card);\r\n    }\r\n\r\n    public void addCardToSideDeck(Card card) {\r\n        this.sideDeck.add(card);\r\n    }\r\n\r\n    public void removeCardFromMainDeck(Card card) {\r\n        this.mainDeck.remove(card);\r\n    }\r\n\r\n    public void removeCardFromSideDeck(Card card) {\r\n        this.sideDeck.remove(card);\r\n    }\r\n\r\n    public int numberOfWantedCard(Card wantedCard) {\r\n        int number = 0;\r\n        for (Card eachCard : this.sideDeck) {\r\n            if (eachCard.equals(wantedCard))\r\n                number++;\r\n        }\r\n        for (Card eachCard : this.mainDeck) {\r\n            if (eachCard.equals(wantedCard))\r\n                number++;\r\n        }\r\n        return number;\r\n    }\r\n\r\n    public boolean isValid() {\r\n        return (this.mainDeck.size() >= 40);\r\n    }\r\n\r\n    public boolean cardExistsInDeck(Card card, boolean isSide) {\r\n        if (isSide) {\r\n            return this.sideDeck.contains(card);\r\n        } else {\r\n            return this.mainDeck.contains(card);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return this.deckName + \": main deck \" + this.mainDeck.size() + \", side deck \" + this.sideDeck.size();\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o) return true;\r\n        if (o == null || getClass() != o.getClass()) return false;\r\n        Deck deck = (Deck) o;\r\n        return Objects.equals(this.deckName, deck.deckName);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/model/Deck.java	(revision dddfa46bbf81e04f4b12de9c10f0a1525bdc8e9b)
+++ src/main/java/model/Deck.java	(date 1625420967975)
@@ -41,13 +41,13 @@
     }
 
     public int getCountOfCardInDeck(Card card) {
-        int counter =0;
+        int counter = 0;
         for (Card eachCard : this.sideDeck) {
-            if (card.getName().equals(eachCard.getName()))
+            if (eachCard != null && card.getName().equals(eachCard.getName()))
                 counter++;
         }
         for (Card eachCard : this.mainDeck) {
-            if (card.getName().equals(eachCard.getName()))
+            if (eachCard != null && card.getName().equals(eachCard.getName()))
                 counter++;
         }
         return counter;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0b1707ad-3e75-4310-9619-956ec670ae1a\" name=\"Default Changelist\" comment=\"vasl shod\">\r\n      <change afterPath=\"$PROJECT_DIR$/Users/22k.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Users/;.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Users/KK.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Users/N.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Users/l.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Users/ll.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Users/oO.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Users/ppp.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Users/ت.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Users/م.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/view/RemoveCardFromDeckView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allUsers.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/allUsers.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controller/DeckController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controller/DeckController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controller/MainControllerGraphic.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controller/MainControllerGraphic.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/view/AllDecksViewGraphic.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/view/AllDecksViewGraphic.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/view/CreateNewDeckView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/view/AddCardToDeckView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/view/DeckViewGraphic.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/view/DeckViewGraphic.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/view/LogInViewGraphic.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/view/LogInViewGraphic.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/view/SignUpViewGraphic.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/view/SignUpViewGraphic.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/CreateNewDeck.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/CreateNewDeck.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/controller/DeckController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/controller/DeckController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/LogInViewGraphic.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/LogInViewGraphic.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/ProfileView.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/ProfileView.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/SignUpViewGraphic.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/SignUpViewGraphic.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeStyleSettingsInfer\">\r\n    <option name=\"done\" value=\"true\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectCodeStyleSettingsMigration\">\r\n    <option name=\"version\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1tf7blqKJ2Y0dLvEX2lrUssvKzj\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"restartRequiresConfirmation\" value=\"false\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settings.project.statistic.project.settings\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"controller.exeption\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.SignUpViewGraphic\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"1.8\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"project_team_17\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MainViewGraphic\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"view.MainViewGraphic\" />\r\n      <module name=\"project_team_17\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"view.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SignUpViewGraphic\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"1.8\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"view.SignUpViewGraphic\" />\r\n      <module name=\"project_team_17\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"view.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"project_team_17\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test.testForMinFinder\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"project_team_17_2\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test\" />\r\n      <option name=\"METHOD_NAME\" value=\"testForMinFinder\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.SignUpViewGraphic\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.test\" />\r\n        <item itemvalue=\"JUnit.test.testForMinFinder\" />\r\n        <item itemvalue=\"Application.MainViewGraphic\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"StructuralSearchPlugin\">\r\n    <searchConfiguration name=\"Unnamed\" created=\"1624744011824\" text=\"/* $CommentContent$ */\" recursive=\"false\" caseInsensitive=\"false\" type=\"JAVA\" pattern_context=\"default\" scope_type=\"PROJECT\" scope_descriptor=\"\" history=\"1\">\r\n      <constraint name=\"__context__\" within=\"\" contains=\"\" />\r\n      <constraint name=\"CommentContent\" within=\"\" contains=\"\" />\r\n    </searchConfiguration>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0b1707ad-3e75-4310-9619-956ec670ae1a\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1623148364579</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1623148364579</updated>\r\n      <workItem from=\"1624545878199\" duration=\"3232000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"ScoreBoardViewGraphic.java\">\r\n      <created>1623149665559</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623149665559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"ScoreBoardViewGraphic.java\">\r\n      <created>1623149688409</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623149688409</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Error sign up\">\r\n      <created>1623151044078</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623151044078</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"model.SpellCard.java&#10;Monster Reborn + Terraforming\">\r\n      <created>1623868346229</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623868346229</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"model.SpellCard.java&#10;RAIGEKI + POT_OF_GREED\">\r\n      <created>1623946393997</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623946393997</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Yami SpellCard.java\">\r\n      <created>1624002906129</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624002906129</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Forest &amp; Closed Forest&#10;SpellCard.java\">\r\n      <created>1624012207305</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624012207305</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"debug import user\">\r\n      <created>1624093680512</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624093680512</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"debug import user o baghie import ha\">\r\n      <created>1624099929742</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624099929742</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"kiana test error fix\">\r\n      <created>1624533248061</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624533248061</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"show all cards debug\">\r\n      <created>1624546002241</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624546002241</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"jabejayie cheat money\">\r\n      <created>1624547044985</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624547044985</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"draw phase automatic\">\r\n      <created>1624556390073</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624556390073</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"debug1\">\r\n      <created>1624625286861</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624625286861</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"debug2\">\r\n      <created>1624639165113</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624639165113</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"ai\">\r\n      <created>1624641323564</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624641323564</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"debug attack1\">\r\n      <created>1624643600247</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624643600247</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"debug attack2\">\r\n      <created>1624645817335</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624645817335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"debug attack3\">\r\n      <created>1624646566864</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624646566864</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"debug attack4\">\r\n      <created>1624650239704</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624650239704</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"debug show card\">\r\n      <created>1624653667478</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624653667478</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"debug show card2\">\r\n      <created>1624654145122</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624654145122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"debug takeAction1\">\r\n      <created>1624702088038</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624702088038</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"debug command knight2\">\r\n      <created>1624703733833</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624703733833</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"nothing\">\r\n      <created>1624704514853</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624704514853</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"GATE_GUARDIAN\">\r\n      <created>1624709705904</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624709705904</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"SPELL_ABSORPTION debug1\">\r\n      <created>1624710730390</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624710730390</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"tributeForSummon debug\">\r\n      <created>1624712073940</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624712073940</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Full spell and trap zone\">\r\n      <created>1624713959005</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624713959005</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"continuous spell card\">\r\n      <created>1624715726136</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624715726136</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"suijin debug 1\">\r\n      <created>1624717829951</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624717829951</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"suijin debug 2\">\r\n      <created>1624719651615</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624719651615</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"gate gaurdian debug\">\r\n      <created>1624721450582</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624721450582</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"activate spell debug 1\">\r\n      <created>1624725085666</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624725085666</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"AIFullDebug + monster reborn\">\r\n      <created>1624729177752</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624729177752</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"twin twister + spell absorption\">\r\n      <created>1624737729186</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624737729186</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"mystical space typhoon&#10;twin twisters\">\r\n      <created>1624739906446</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624739906446</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۳۸\" summary=\":|\">\r\n      <created>1625245993391</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۳۸\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۳۸\" />\r\n      <updated>1625245993391</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۳۹\" summary=\"profile and scoreboard edited\">\r\n      <created>1625252163631</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۳۹\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۳۹\" />\r\n      <updated>1625252163631</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"ShopGraphic3\">\r\n      <created>1625304651482</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1625304651482</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"ShopGraphic4\">\r\n      <created>1625313201854</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1625313201854</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۴۲\" summary=\"create deck\">\r\n      <created>1625349222305</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۴۲\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۴۲\" />\r\n      <updated>1625349222305</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۴۳\" summary=\"profile photo\">\r\n      <created>1625407690499</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۴۳\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۴۳\" />\r\n      <updated>1625407690499</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"44\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"ai\" />\r\n    <MESSAGE value=\"debug attack1\" />\r\n    <MESSAGE value=\"debug attack2\" />\r\n    <MESSAGE value=\"debug attack3\" />\r\n    <MESSAGE value=\"debug attack4\" />\r\n    <MESSAGE value=\"debug show card\" />\r\n    <MESSAGE value=\"debug show card2\" />\r\n    <MESSAGE value=\"debug takeAction1\" />\r\n    <MESSAGE value=\"debug command knight2\" />\r\n    <MESSAGE value=\"nothing\" />\r\n    <MESSAGE value=\"GATE_GUARDIAN\" />\r\n    <MESSAGE value=\"SPELL_ABSORPTION debug1\" />\r\n    <MESSAGE value=\"tributeForSummon debug\" />\r\n    <MESSAGE value=\"Full spell and trap zone\" />\r\n    <MESSAGE value=\"continuous spell card\" />\r\n    <MESSAGE value=\"suijin debug 1\" />\r\n    <MESSAGE value=\"suijin debug 2\" />\r\n    <MESSAGE value=\"gate gaurdian debug\" />\r\n    <MESSAGE value=\"activate spell debug 1\" />\r\n    <MESSAGE value=\"AIFullDebug + monster reborn\" />\r\n    <MESSAGE value=\"twin twister + spell absorption\" />\r\n    <MESSAGE value=\"mystical space typhoon&#10;twin twisters\" />\r\n    <MESSAGE value=\":|\" />\r\n    <MESSAGE value=\"profile and scoreboard edited\" />\r\n    <MESSAGE value=\"ShopGraphic3\" />\r\n    <MESSAGE value=\"ShopGraphic4\" />\r\n    <MESSAGE value=\"create deck\" />\r\n    <MESSAGE value=\"profile photo\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"profile photo\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision dddfa46bbf81e04f4b12de9c10f0a1525bdc8e9b)
+++ .idea/workspace.xml	(date 1625424455677)
@@ -22,32 +22,19 @@
     <select />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0b1707ad-3e75-4310-9619-956ec670ae1a" name="Default Changelist" comment="vasl shod">
-      <change afterPath="$PROJECT_DIR$/Users/22k.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Users/;.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Users/KK.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Users/N.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Users/l.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Users/ll.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Users/oO.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Users/ppp.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Users/ت.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Users/م.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/view/RemoveCardFromDeckView.java" afterDir="false" />
+    <list default="true" id="0b1707ad-3e75-4310-9619-956ec670ae1a" name="Default Changelist" comment="ShopGraphic6">
+      <change afterPath="$PROJECT_DIR$/Users/1.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/all2.zip" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src (2).zip" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src.zip" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Users/q.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Users/q.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/allUsers.txt" beforeDir="false" afterPath="$PROJECT_DIR$/allUsers.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/controller/DeckController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/DeckController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/controller/MainControllerGraphic.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/MainControllerGraphic.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/Deck.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/Deck.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/view/AddCardToDeckView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/view/AddCardToDeckView.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/view/AllDecksViewGraphic.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/view/AllDecksViewGraphic.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/view/CreateNewDeckView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/view/AddCardToDeckView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/view/DeckViewGraphic.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/view/DeckViewGraphic.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/view/LogInViewGraphic.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/view/LogInViewGraphic.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/view/SignUpViewGraphic.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/view/SignUpViewGraphic.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/CreateNewDeck.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/CreateNewDeck.fxml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/controller/DeckController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/controller/DeckController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/LogInViewGraphic.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/LogInViewGraphic.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/ProfileView.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/ProfileView.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/SignUpViewGraphic.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/SignUpViewGraphic.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -99,17 +86,8 @@
     </key>
   </component>
   <component name="RunManager" selected="Application.SignUpViewGraphic">
-    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="ALTERNATIVE_JRE_PATH" value="1.8" />
-      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
-      <option name="MAIN_CLASS_NAME" value="Main" />
-      <module name="project_team_17" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="MainViewGraphic" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="view.MainViewGraphic" />
+    <configuration name="AllDecksViewGraphic" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="view.AllDecksViewGraphic" />
       <module name="project_team_17" />
       <extension name="coverage">
         <pattern>
@@ -121,6 +99,15 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="ALTERNATIVE_JRE_PATH" value="1.8" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
+      <option name="MAIN_CLASS_NAME" value="Main" />
+      <module name="project_team_17" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="SignUpViewGraphic" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="ALTERNATIVE_JRE_PATH" value="1.8" />
       <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
@@ -159,9 +146,9 @@
       <list>
         <item itemvalue="Application.SignUpViewGraphic" />
         <item itemvalue="Application.Main" />
+        <item itemvalue="Application.AllDecksViewGraphic" />
         <item itemvalue="JUnit.test" />
         <item itemvalue="JUnit.test.testForMinFinder" />
-        <item itemvalue="Application.MainViewGraphic" />
       </list>
     </recent_temporary>
   </component>
@@ -466,17 +453,19 @@
       <option name="project" value="LOCAL" />
       <updated>1625313201854</updated>
     </task>
-    <task id="LOCAL‎۰۰۰۴۲" summary="create deck">
-      <created>1625349222305</created>
-      <option name="number" value="LOCAL‎۰۰۰۴۲" />
-      <option name="presentableId" value="LOCAL‎۰۰۰۴۲" />
-      <updated>1625349222305</updated>
+    <task id="LOCAL-00042" summary="ShopGraphic5">
+      <created>1625323414021</created>
+      <option name="number" value="00042" />
+      <option name="presentableId" value="LOCAL-00042" />
+      <option name="project" value="LOCAL" />
+      <updated>1625323414021</updated>
     </task>
-    <task id="LOCAL‎۰۰۰۴۳" summary="profile photo">
-      <created>1625407690499</created>
-      <option name="number" value="LOCAL‎۰۰۰۴۳" />
-      <option name="presentableId" value="LOCAL‎۰۰۰۴۳" />
-      <updated>1625407690499</updated>
+    <task id="LOCAL-00043" summary="ShopGraphic6">
+      <created>1625329659088</created>
+      <option name="number" value="00043" />
+      <option name="presentableId" value="LOCAL-00043" />
+      <option name="project" value="LOCAL" />
+      <updated>1625329659088</updated>
     </task>
     <option name="localTasksCounter" value="44" />
     <servers />
@@ -524,9 +513,43 @@
     <MESSAGE value="profile and scoreboard edited" />
     <MESSAGE value="ShopGraphic3" />
     <MESSAGE value="ShopGraphic4" />
-    <MESSAGE value="create deck" />
-    <MESSAGE value="profile photo" />
-    <option name="LAST_COMMIT_MESSAGE" value="profile photo" />
+    <MESSAGE value="ShopGraphic5" />
+    <MESSAGE value="ShopGraphic6" />
+    <option name="LAST_COMMIT_MESSAGE" value="ShopGraphic6" />
+  </component>
+  <component name="WindowStateProjectService">
+    <state x="446" y="47" key="#com.intellij.ide.util.MemberChooser" timestamp="1625422393677">
+      <screen x="0" y="0" width="1280" height="680" />
+    </state>
+    <state x="446" y="47" key="#com.intellij.ide.util.MemberChooser/0.0.1280.680@0.0.1280.680" timestamp="1625422393677" />
+    <state width="1237" height="224" key="GridCell.Tab.0.bottom" timestamp="1625424076279">
+      <screen x="0" y="0" width="1280" height="680" />
+    </state>
+    <state width="1237" height="224" key="GridCell.Tab.0.bottom/0.0.1280.680@0.0.1280.680" timestamp="1625424076279" />
+    <state width="1237" height="224" key="GridCell.Tab.0.center" timestamp="1625424076279">
+      <screen x="0" y="0" width="1280" height="680" />
+    </state>
+    <state width="1237" height="224" key="GridCell.Tab.0.center/0.0.1280.680@0.0.1280.680" timestamp="1625424076279" />
+    <state width="1237" height="224" key="GridCell.Tab.0.left" timestamp="1625424076279">
+      <screen x="0" y="0" width="1280" height="680" />
+    </state>
+    <state width="1237" height="224" key="GridCell.Tab.0.left/0.0.1280.680@0.0.1280.680" timestamp="1625424076279" />
+    <state width="1237" height="224" key="GridCell.Tab.0.right" timestamp="1625424076279">
+      <screen x="0" y="0" width="1280" height="680" />
+    </state>
+    <state width="1237" height="224" key="GridCell.Tab.0.right/0.0.1280.680@0.0.1280.680" timestamp="1625424076279" />
+    <state x="121" y="0" key="SettingsEditor" timestamp="1625298369486">
+      <screen x="0" y="0" width="1280" height="680" />
+    </state>
+    <state x="121" y="0" key="SettingsEditor/0.0.1280.680@0.0.1280.680" timestamp="1625298369486" />
+    <state x="233" y="74" key="Vcs.Push.Dialog.v2" timestamp="1625329662626">
+      <screen x="0" y="0" width="1280" height="680" />
+    </state>
+    <state x="233" y="74" key="Vcs.Push.Dialog.v2/0.0.1280.680@0.0.1280.680" timestamp="1625329662626" />
+    <state x="303" y="1" width="672" height="678" key="search.everywhere.popup" timestamp="1625340378374">
+      <screen x="0" y="0" width="1280" height="680" />
+    </state>
+    <state x="303" y="1" width="672" height="678" key="search.everywhere.popup/0.0.1280.680@0.0.1280.680" timestamp="1625340378374" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: Users/1.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Users/1.txt	(date 1625420321803)
+++ Users/1.txt	(date 1625420321803)
@@ -0,0 +1,5 @@
+1
+1
+1
+0
+100000
\ No newline at end of file
